//  Copyright 2023-Present Couchbase, Inc.
//
//  Use of this software is governed by the Business Source License included
//  in the file licenses/BSL-Couchbase.txt.  As of the Change Date specified
//  in that file, in accordance with the Business Source License, use of this
//  software will be governed by the Apache License, Version 2.0, included in
//  the file licenses/APL2.txt.

// WARNING: This file is generated by the build process. DO NOT EDIT.

package command

var statement_syntax = map[string][][]string{
	"permitted_identifiers": [][]string{
		[]string{"<identifier>"},
		[]string{"DEFAULT"},
		[]string{"USER"},
		[]string{"USERS"},
	},
	"statements": [][]string{
		[]string{"advise"},
		[]string{"explain"},
		[]string{"prepare"},
		[]string{"execute"},
		[]string{"explain_function"},
		[]string{"statement"},
	},
	"statement": [][]string{
		[]string{"select_statement"},
		[]string{"dml_statement"},
		[]string{"ddl_statement"},
		[]string{"infer"},
		[]string{"update_statistics"},
		[]string{"user_statement"},
		[]string{"group_statement"},
		[]string{"role_statement"},
		[]string{"function_statement"},
		[]string{"transaction_statement"},
		[]string{"sequence_statement"},
	},
	"advise": [][]string{
		[]string{"ADVISE", "[index]", "statement"},
	},
	"[index]": [][]string{
		[]string{"INDEX"},
	},
	"explain": [][]string{
		[]string{"EXPLAIN", "statement"},
	},
	"explain_function": [][]string{
		[]string{"EXPLAIN", "FUNCTION", "func_name"},
	},
	"prepare": [][]string{
		[]string{"PREPARE", "[force]", "[name]", "statement"},
	},
	"[force]": [][]string{
		[]string{"FORCE"},
	},
	"[name]": [][]string{
		[]string{"permitted_identifiers", "from_or_as"},
		[]string{"<quoted string>", "from_or_as"},
	},
	"from_or_as": [][]string{
		[]string{"FROM"},
		[]string{"AS"},
	},
	"execute": [][]string{
		[]string{"EXECUTE", "expression", "[execute_using]"},
	},
	"[execute_using]": [][]string{
		[]string{"USING", "construction_expr"},
	},
	"infer": [][]string{
		[]string{"INFER", "keyspace_collection", "simple_keyspace_ref", "[infer_using]", "[with_clause]"},
		[]string{"INFER", "keyspace_path", "[as_alias]", "[infer_using]", "[with_clause]"},
		[]string{"INFER", "expression", "[infer_using]", "[with_clause]"},
	},
	"keyspace_collection": [][]string{
		[]string{"KEYSPACE"},
		[]string{"COLLECTION"},
	},
	"select_statement": [][]string{
		[]string{"fullselect"},
	},
	"dml_statement": [][]string{
		[]string{"insert"},
		[]string{"upsert"},
		[]string{"delete"},
		[]string{"update"},
		[]string{"merge"},
	},
	"ddl_statement": [][]string{
		[]string{"index_statement"},
		[]string{"bucket_statement"},
		[]string{"scope_statement"},
		[]string{"collection_statement"},
	},
	"user_statement": [][]string{
		[]string{"create_user"},
		[]string{"alter_user"},
		[]string{"drop_user"},
	},
	"group_statement": [][]string{
		[]string{"create_group"},
		[]string{"alter_group"},
		[]string{"drop_group"},
	},
	"role_statement": [][]string{
		[]string{"grant_role"},
		[]string{"revoke_role"},
	},
	"index_statement": [][]string{
		[]string{"create_index"},
		[]string{"drop_index"},
		[]string{"alter_index"},
		[]string{"build_index"},
	},
	"bucket_statement": [][]string{
		[]string{"create_bucket"},
		[]string{"alter_bucket"},
		[]string{"drop_bucket"},
	},
	"scope_statement": [][]string{
		[]string{"create_scope"},
		[]string{"drop_scope"},
	},
	"collection_statement": [][]string{
		[]string{"create_collection"},
		[]string{"drop_collection"},
		[]string{"flush_collection"},
	},
	"function_statement": [][]string{
		[]string{"create_function"},
		[]string{"drop_function"},
		[]string{"execute_function"},
	},
	"transaction_statement": [][]string{
		[]string{"start_transaction"},
		[]string{"commit_transaction"},
		[]string{"rollback_transaction"},
		[]string{"savepoint"},
		[]string{"set_transaction_isolation"},
	},
	"fullselect": [][]string{
		[]string{"select_terms", "[order_by]"},
		[]string{"select_terms", "[order_by]", "limit", "[offset]"},
		[]string{"select_terms", "[order_by]", "offset", "[limit]"},
		[]string{"with", "select_terms", "[order_by]"},
		[]string{"with", "select_terms", "[order_by]", "limit", "[offset]"},
		[]string{"with", "select_terms", "[order_by]", "offset", "[limit]"},
	},
	"select_terms": [][]string{
		[]string{"subselect"},
		[]string{"select_terms", "setop", "select_term"},
		[]string{"subquery_expr", "setop", "select_term"},
	},
	"select_term": [][]string{
		[]string{"subselect"},
		[]string{"subquery_expr"},
	},
	"subselect": [][]string{
		[]string{"from_select"},
		[]string{"select_from"},
	},
	"from_select": [][]string{
		[]string{"from", "[let]", "[where]", "[group]", "[window_clause]", "SELECT", "[optim_hints]", "projection"},
	},
	"select_from": [][]string{
		[]string{"SELECT", "[optim_hints]", "projection", "[from]", "[let]", "[where]", "[group]", "[window_clause]"},
	},
	"setop": [][]string{
		[]string{"UNION"},
		[]string{"UNION", "ALL"},
		[]string{"INTERSECT"},
		[]string{"INTERSECT", "ALL"},
		[]string{"EXCEPT"},
		[]string{"EXCEPT", "ALL"},
	},
	"[optim_hints]": [][]string{
		[]string{"/*OPTIM_HINTS*/"},
	},
	"OPTIM_HINTS": [][]string{
		[]string{"PLUS", "optim_hints"},
		[]string{"PLUS", "object"},
	},
	"optim_hints": [][]string{
		[]string{"optim_hint"},
		[]string{"optim_hints", "optim_hint"},
	},
	"optim_hint": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"permitted_identifiers", "LPAREN", "[hint_args]", "RPAREN"},
		[]string{"INDEX", "LPAREN", "[hint_args]", "RPAREN"},
	},
	"hint_args": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"permitted_identifiers", "DIV", "BUILD"},
		[]string{"permitted_identifiers", "DIV", "PROBE"},
		[]string{"hint_args", "permitted_identifiers"},
	},
	"projection": [][]string{
		[]string{"[quantifier]", "projects", "[exclude]"},
		[]string{"[quantifier]", "raw", "expression", "[as_alias]"},
	},
	"[quantifier]": [][]string{
		[]string{"ALL"},
		[]string{"DISTINCT"},
	},
	"[exclude]": [][]string{
		[]string{"EXCLUDE", "exprs"},
	},
	"raw": [][]string{
		[]string{"RAW"},
		[]string{"ELEMENT"},
		[]string{"VALUE"},
	},
	"projects": [][]string{
		[]string{"project"},
		[]string{"projects", "COMMA", "project"},
	},
	"project": [][]string{
		[]string{"STAR"},
		[]string{"expression", "DOT", "STAR"},
		[]string{"expression", "[as_alias]"},
	},
	"as_alias": [][]string{
		[]string{"alias"},
		[]string{"AS", "alias"},
	},
	"alias": [][]string{
		[]string{"permitted_identifiers"},
	},
	"from": [][]string{
		[]string{"FROM", "from_terms"},
	},
	"from_terms": [][]string{
		[]string{"from_term"},
		[]string{"from_terms", "COMMA", "from_term"},
		[]string{"from_terms", "COMMA", "LATERAL", "from_term"},
	},
	"from_term": [][]string{
		[]string{"simple_from_term"},
		[]string{"from_term", "[join_type]", "JOIN", "simple_from_term", "on_keys"},
		[]string{"from_term", "[join_type]", "JOIN", "LATERAL", "simple_from_term", "on_keys"},
		[]string{"from_term", "[join_type]", "JOIN", "simple_from_term", "on_key", "FOR", "permitted_identifiers"},
		[]string{"from_term", "[join_type]", "JOIN", "LATERAL", "simple_from_term", "on_key", "FOR", "permitted_identifiers"},
		[]string{"from_term", "[join_type]", "NEST", "simple_from_term", "on_keys"},
		[]string{"from_term", "[join_type]", "NEST", "LATERAL", "simple_from_term", "on_keys"},
		[]string{"from_term", "[join_type]", "NEST", "simple_from_term", "on_key", "FOR", "permitted_identifiers"},
		[]string{"from_term", "[join_type]", "NEST", "LATERAL", "simple_from_term", "on_key", "FOR", "permitted_identifiers"},
		[]string{"from_term", "[join_type]", "unnest", "expression", "[as_alias]"},
		[]string{"from_term", "[join_type]", "JOIN", "simple_from_term", "ON", "expression"},
		[]string{"from_term", "[join_type]", "JOIN", "LATERAL", "simple_from_term", "ON", "expression"},
		[]string{"from_term", "[join_type]", "NEST", "simple_from_term", "ON", "expression"},
		[]string{"from_term", "[join_type]", "NEST", "LATERAL", "simple_from_term", "ON", "expression"},
		[]string{"simple_from_term", "RIGHT", "[outer]", "JOIN", "simple_from_term", "ON", "expression"},
		[]string{"simple_from_term", "RIGHT", "[outer]", "JOIN", "LATERAL", "simple_from_term", "ON", "expression"},
	},
	"simple_from_term": [][]string{
		[]string{"keyspace_term"},
		[]string{"expression", "[as_alias]", "[use]"},
	},
	"unnest": [][]string{
		[]string{"UNNEST"},
		[]string{"FLATTEN"},
	},
	"keyspace_term": [][]string{
		[]string{"keyspace_path", "[as_alias]", "[use]"},
	},
	"keyspace_path": [][]string{
		[]string{"namespace_term", "keyspace_name"},
		[]string{"namespace_term", "path_part", "DOT", "path_part", "DOT", "keyspace_name"},
	},
	"namespace_term": [][]string{
		[]string{"namespace_name"},
		[]string{"SYSTEM", "COLON"},
	},
	"namespace_name": [][]string{
		[]string{"<namespace-identifier>", "COLON"},
	},
	"path_part": [][]string{
		[]string{"permitted_identifiers"},
	},
	"keyspace_name": [][]string{
		[]string{"permitted_identifiers"},
	},
	"[use]": [][]string{
		[]string{"USE", "use_options"},
	},
	"use_options": [][]string{
		[]string{"use_keys"},
		[]string{"use_index"},
		[]string{"join_hint"},
		[]string{"use_index", "join_hint"},
		[]string{"join_hint", "use_index"},
		[]string{"use_keys", "join_hint"},
		[]string{"join_hint", "use_keys"},
	},
	"use_keys": [][]string{
		[]string{"[primary]", "KEYS", "expression"},
		[]string{"[primary]", "KEYS", "VALIDATE", "expression"},
	},
	"use_index": [][]string{
		[]string{"INDEX", "LPAREN", "index_refs", "RPAREN"},
	},
	"join_hint": [][]string{
		[]string{"HASH", "LPAREN", "use_hash_option", "RPAREN"},
		[]string{"NL"},
	},
	"[primary]": [][]string{
		[]string{"PRIMARY"},
	},
	"index_refs": [][]string{
		[]string{"index_ref"},
		[]string{"index_refs", "COMMA", "index_ref"},
	},
	"index_ref": [][]string{
		[]string{"[index_name]", "[index_using]"},
	},
	"use_hash_option": [][]string{
		[]string{"BUILD"},
		[]string{"PROBE"},
	},
	"[use_del_upd]": [][]string{
		[]string{"[use]"},
	},
	"[join_type]": [][]string{
		[]string{"INNER"},
		[]string{"LEFT", "[outer]"},
	},
	"[outer]": [][]string{
		[]string{"OUTER"},
	},
	"on_keys": [][]string{
		[]string{"ON", "[primary]", "KEYS", "expression"},
		[]string{"ON", "[primary]", "KEYS", "VALIDATE", "expression"},
	},
	"on_key": [][]string{
		[]string{"ON", "[primary]", "KEY", "expression"},
		[]string{"ON", "[primary]", "KEY", "VALIDATE", "expression"},
	},
	"let": [][]string{
		[]string{"LET", "bindings"},
	},
	"bindings": [][]string{
		[]string{"binding"},
		[]string{"bindings", "COMMA", "binding"},
	},
	"binding": [][]string{
		[]string{"alias", "EQ", "expression"},
	},
	"with": [][]string{
		[]string{"WITH", "with_list"},
		[]string{"WITH", "RECURSIVE", "with_list"},
	},
	"with_list": [][]string{
		[]string{"with_term"},
		[]string{"with_list", "COMMA", "with_term"},
	},
	"with_term": [][]string{
		[]string{"alias", "AS", "paren_expr", "[cycle_clause]", "[option_clause]"},
	},
	"[option_clause]": [][]string{
		[]string{"OPTIONS", "object"},
	},
	"[cycle_clause]": [][]string{
		[]string{"CYCLE", "exprs", "RESTRICT"},
	},
	"where": [][]string{
		[]string{"WHERE", "expression"},
	},
	"group": [][]string{
		[]string{"GROUP", "BY", "group_terms", "[group_as]", "[letting]", "[having]"},
		[]string{"letting"},
	},
	"group_terms": [][]string{
		[]string{"group_term"},
		[]string{"group_terms", "COMMA", "group_term"},
	},
	"group_term": [][]string{
		[]string{"expression", "[as_alias]"},
	},
	"letting": [][]string{
		[]string{"LETTING", "bindings"},
	},
	"having": [][]string{
		[]string{"HAVING", "expression"},
	},
	"[group_as]": [][]string{
		[]string{"GROUP", "AS", "permitted_identifiers"},
	},
	"order_by": [][]string{
		[]string{"ORDER", "BY", "sort_terms"},
	},
	"sort_terms": [][]string{
		[]string{"sort_term"},
		[]string{"sort_terms", "COMMA", "sort_term"},
	},
	"sort_term": [][]string{
		[]string{"expression", "[dir]", "[order_nulls]"},
	},
	"dir": [][]string{
		[]string{"param_expr"},
		[]string{"ASC"},
		[]string{"DESC"},
	},
	"[order_nulls]": [][]string{
		[]string{"NULLS", "FIRST"},
		[]string{"NULLS", "LAST"},
		[]string{"NULLS", "param_expr"},
	},
	"first_last": [][]string{
		[]string{"FIRST", "}"},
		[]string{"LAST", "}"},
	},
	"limit": [][]string{
		[]string{"LIMIT", "expression"},
	},
	"offset": [][]string{
		[]string{"OFFSET", "expression"},
	},
	"insert": [][]string{
		[]string{"INSERT", "INTO", "keyspace_ref", "[values_header]", "values_list", "[returning]"},
		[]string{"INSERT", "INTO", "keyspace_ref", "LPAREN", "key_val_options_expr_header", "RPAREN", "fullselect", "[returning]"},
	},
	"simple_keyspace_ref": [][]string{
		[]string{"keyspace_name", "[as_alias]"},
		[]string{"path_part", "DOT", "path_part", "[as_alias]"},
		[]string{"keyspace_path", "[as_alias]"},
		[]string{"path_part", "DOT", "path_part", "DOT", "keyspace_name", "[as_alias]"},
	},
	"keyspace_ref": [][]string{
		[]string{"simple_keyspace_ref"},
		[]string{"param_expr", "[as_alias]"},
	},
	"[values_header]": [][]string{
		[]string{"LPAREN", "[primary]", "KEY", "COMMA", "VALUE", "RPAREN"},
		[]string{"LPAREN", "[primary]", "KEY", "COMMA", "VALUE", "COMMA", "OPTIONS", "RPAREN"},
	},
	"key": [][]string{
		[]string{"[primary]", "KEY"},
	},
	"values_list": [][]string{
		[]string{"values"},
		[]string{"values_list", "COMMA", "next_values"},
	},
	"values": [][]string{
		[]string{"VALUES", "key_val_expr"},
		[]string{"VALUES", "key_val_options_expr"},
	},
	"next_values": [][]string{
		[]string{"values"},
		[]string{"key_val_expr"},
		[]string{"key_val_options_expr"},
	},
	"key_val_expr": [][]string{
		[]string{"LPAREN", "expression", "COMMA", "expression", "RPAREN"},
	},
	"key_val_options_expr": [][]string{
		[]string{"LPAREN", "expression", "COMMA", "expression", "COMMA", "expression", "RPAREN"},
	},
	"returning": [][]string{
		[]string{"RETURNING", "returns"},
	},
	"returns": [][]string{
		[]string{"projects"},
		[]string{"raw", "expression"},
	},
	"key_expr_header": [][]string{
		[]string{"key", "expression"},
	},
	"value_expr_header": [][]string{
		[]string{"VALUE", "expression"},
	},
	"options_expr_header": [][]string{
		[]string{"OPTIONS", "expression"},
	},
	"key_val_options_expr_header": [][]string{
		[]string{"key_expr_header"},
		[]string{"key_expr_header", "COMMA", "value_expr_header"},
		[]string{"key_expr_header", "COMMA", "value_expr_header", "COMMA", "options_expr_header"},
		[]string{"key_expr_header", "COMMA", "options_expr_header"},
	},
	"upsert": [][]string{
		[]string{"UPSERT", "INTO", "keyspace_ref", "[values_header]", "values_list", "[returning]"},
		[]string{"UPSERT", "INTO", "keyspace_ref", "LPAREN", "key_val_options_expr_header", "RPAREN", "fullselect", "[returning]"},
	},
	"delete": [][]string{
		[]string{"DELETE", "[optim_hints]", "FROM", "keyspace_ref", "[use_del_upd]", "[let]", "[where]", "limit", "[offset]", "[returning]"},
		[]string{"DELETE", "[optim_hints]", "FROM", "keyspace_ref", "[use_del_upd]", "[let]", "[where]", "offset", "[limit]", "[returning]"},
		[]string{"DELETE", "[optim_hints]", "FROM", "keyspace_ref", "[use_del_upd]", "[let]", "[where]", "[returning]"},
	},
	"update": [][]string{
		[]string{"UPDATE", "[optim_hints]", "keyspace_ref", "[use_del_upd]", "[let]", "set", "unset", "[where]", "[limit]", "[returning]"},
		[]string{"UPDATE", "[optim_hints]", "keyspace_ref", "[use_del_upd]", "[let]", "set", "[where]", "[limit]", "[returning]"},
		[]string{"UPDATE", "[optim_hints]", "keyspace_ref", "[use_del_upd]", "[let]", "unset", "[where]", "[limit]", "[returning]"},
	},
	"set": [][]string{
		[]string{"SET", "set_terms"},
	},
	"set_terms": [][]string{
		[]string{"set_term"},
		[]string{"set_terms", "COMMA", "set_term"},
	},
	"set_term": [][]string{
		[]string{"path", "EQ", "expression", "[update_for]"},
		[]string{"function_meta_expr", "DOT", "path", "EQ", "expression"},
	},
	"function_meta_expr": [][]string{
		[]string{"function_name", "LPAREN", "[exprs]", "RPAREN"},
	},
	"update_for": [][]string{
		[]string{"update_dimensions", "[when]", "END"},
	},
	"update_dimensions": [][]string{
		[]string{"FOR", "update_dimension"},
		[]string{"update_dimensions", "FOR", "update_dimension"},
	},
	"update_dimension": [][]string{
		[]string{"update_binding"},
		[]string{"update_dimension", "COMMA", "update_binding"},
	},
	"update_binding": [][]string{
		[]string{"variable", "IN", "expression"},
		[]string{"variable", "WITHIN", "expression"},
		[]string{"variable", "COLON", "variable", "IN", "expression"},
		[]string{"variable", "COLON", "variable", "WITHIN", "expression"},
	},
	"variable": [][]string{
		[]string{"permitted_identifiers"},
	},
	"[when]": [][]string{
		[]string{"WHEN", "expression"},
	},
	"unset": [][]string{
		[]string{"UNSET", "unset_terms"},
	},
	"unset_terms": [][]string{
		[]string{"unset_term"},
		[]string{"unset_terms", "COMMA", "unset_term"},
	},
	"unset_term": [][]string{
		[]string{"path", "[update_for]"},
	},
	"merge": [][]string{
		[]string{"MERGE", "[optim_hints]", "INTO", "simple_keyspace_ref", "[use_merge]", "USING", "simple_from_term", "ON", "[key]", "expression", "[let]", "[merge_actions]", "[limit]", "[returning]"},
	},
	"[use_merge]": [][]string{
		[]string{"[use]"},
	},
	"[merge_actions]": [][]string{
		[]string{"WHEN", "MATCHED", "THEN", "UPDATE", "merge_update", "[merge_delete_insert]"},
		[]string{"WHEN", "MATCHED", "THEN", "DELETE", "merge_delete", "[merge_insert]"},
		[]string{"WHEN", "NOT", "MATCHED", "THEN", "INSERT", "merge_insert"},
	},
	"[merge_delete_insert]": [][]string{
		[]string{"WHEN", "MATCHED", "THEN", "DELETE", "merge_delete", "[merge_insert]"},
		[]string{"WHEN", "NOT", "MATCHED", "THEN", "INSERT", "merge_insert"},
	},
	"[merge_insert]": [][]string{
		[]string{"WHEN", "NOT", "MATCHED", "THEN", "INSERT", "merge_insert"},
	},
	"merge_update": [][]string{
		[]string{"set", "[where]"},
		[]string{"set", "unset", "[where]"},
		[]string{"unset", "[where]"},
	},
	"merge_delete": [][]string{
		[]string{"[where]"},
	},
	"merge_insert": [][]string{
		[]string{"expression", "[where]"},
		[]string{"key_val_expr", "[where]"},
		[]string{"key_val_options_expr", "[where]"},
		[]string{"LPAREN", "key_val_options_expr_header", "RPAREN", "[where]"},
	},
	"create_user": [][]string{
		[]string{"CREATE", "USER", "user", "user_opts"},
	},
	"alter_user": [][]string{
		[]string{"ALTER", "USER", "user", "user_opts"},
	},
	"drop_user": [][]string{
		[]string{"DROP", "USER", "user"},
	},
	"user_opts": [][]string{
		[]string{"user_opts", "user_opt"},
	},
	"user_opt": [][]string{
		[]string{"PASSWORD", "<quoted string>"},
		[]string{"WITH", "<quoted string>"},
		[]string{"GROUPS", "groups"},
		[]string{"GROUP", "permitted_identifiers"},
	},
	"groups": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"groups", "COMMA", "permitted_identifiers"},
	},
	"create_group": [][]string{
		[]string{"CREATE", "GROUP", "group_name", "group_opts"},
	},
	"alter_group": [][]string{
		[]string{"ALTER", "GROUP", "group_name", "group_opts"},
	},
	"drop_group": [][]string{
		[]string{"DROP", "GROUP", "group_name"},
	},
	"group_name": [][]string{
		[]string{"permitted_identifiers"},
	},
	"group_opts": [][]string{
		[]string{"group_opts", "group_opt"},
	},
	"group_opt": [][]string{
		[]string{"WITH", "<quoted string>"},
		[]string{"ROLES", "group_role_list"},
		[]string{"NO", "ROLES"},
		[]string{"ROLE", "group_role_list_item"},
	},
	"group_role_list": [][]string{
		[]string{"group_role_list_item"},
		[]string{"group_role_list", "COMMA", "group_role_list_item"},
	},
	"group_role_list_item": [][]string{
		[]string{"role_name"},
		[]string{"role_name", "ON", "keyspace_scope"},
	},
	"group_or_groups": [][]string{
		[]string{"GROUP"},
		[]string{"GROUPS"},
	},
	"user_users": [][]string{
		[]string{"USER"},
		[]string{"USERS"},
	},
	"grant_role": [][]string{
		[]string{"GRANT", "role_list", "TO", "user_list"},
		[]string{"GRANT", "role_list", "ON", "keyspace_scope_list", "TO", "user_list"},
		[]string{"GRANT", "role_list", "TO", "user_users", "user_list"},
		[]string{"GRANT", "role_list", "ON", "keyspace_scope_list", "TO", "user_users", "user_list"},
		[]string{"GRANT", "role_list", "TO", "group_or_groups", "groups"},
		[]string{"GRANT", "role_list", "ON", "keyspace_scope_list", "TO", "group_or_groups", "groups"},
	},
	"role_list": [][]string{
		[]string{"role_name"},
		[]string{"role_list", "COMMA", "role_name"},
	},
	"role_name": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"SELECT"},
		[]string{"INSERT"},
		[]string{"UPDATE"},
		[]string{"DELETE"},
	},
	"keyspace_scope_list": [][]string{
		[]string{"keyspace_scope"},
		[]string{"keyspace_scope_list", "COMMA", "keyspace_scope"},
	},
	"keyspace_scope": [][]string{
		[]string{"keyspace_name"},
		[]string{"path_part", "DOT", "path_part"},
		[]string{"namespace_name", "keyspace_name"},
		[]string{"namespace_name", "path_part", "DOT", "path_part", "DOT", "keyspace_name"},
		[]string{"path_part", "DOT", "path_part", "DOT", "keyspace_name"},
		[]string{"namespace_name", "path_part", "DOT", "path_part"},
	},
	"user_list": [][]string{
		[]string{"user"},
		[]string{"user_list", "COMMA", "user"},
	},
	"user": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"permitted_identifiers", "COLON", "permitted_identifiers"},
	},
	"revoke_role": [][]string{
		[]string{"REVOKE", "role_list", "FROM", "user_list"},
		[]string{"REVOKE", "role_list", "ON", "keyspace_scope_list", "FROM", "user_list"},
		[]string{"REVOKE", "role_list", "FROM", "user_users", "user_list"},
		[]string{"REVOKE", "role_list", "ON", "keyspace_scope_list", "FROM", "user_users", "user_list"},
		[]string{"REVOKE", "role_list", "FROM", "group_or_groups", "groups"},
		[]string{"REVOKE", "role_list", "ON", "keyspace_scope_list", "FROM", "group_or_groups", "groups"},
	},
	"[def_with_clause]": [][]string{
		[]string{"[with_clause]"},
	},
	"create_bucket": [][]string{
		[]string{"CREATE", "BUCKET", "permitted_identifiers", "[if_not_exists]", "[def_with_clause]"},
		[]string{"CREATE", "BUCKET", "IF", "NOT", "EXISTS", "permitted_identifiers", "[def_with_clause]"},
		[]string{"CREATE", "DATABASE", "permitted_identifiers", "[if_not_exists]", "[def_with_clause]"},
		[]string{"CREATE", "DATABASE", "IF", "NOT", "EXISTS", "permitted_identifiers", "[def_with_clause]"},
	},
	"alter_bucket": [][]string{
		[]string{"ALTER", "BUCKET", "permitted_identifiers", "with_clause"},
		[]string{"ALTER", "DATABASE", "permitted_identifiers", "with_clause"},
	},
	"drop_bucket": [][]string{
		[]string{"DROP", "BUCKET", "permitted_identifiers", "[if_exists]"},
		[]string{"DROP", "BUCKET", "IF", "EXISTS", "permitted_identifiers"},
		[]string{"DROP", "DATABASE", "permitted_identifiers", "[if_exists]"},
		[]string{"DROP", "DATABASE", "IF", "EXISTS", "permitted_identifiers"},
	},
	"create_scope": [][]string{
		[]string{"CREATE", "SCOPE", "named_scope_ref", "[if_not_exists]"},
		[]string{"CREATE", "SCOPE", "IF", "NOT", "EXISTS", "named_scope_ref"},
	},
	"drop_scope": [][]string{
		[]string{"DROP", "SCOPE", "named_scope_ref", "[if_exists]"},
		[]string{"DROP", "SCOPE", "IF", "EXISTS", "named_scope_ref"},
	},
	"create_collection": [][]string{
		[]string{"CREATE", "COLLECTION", "named_keyspace_ref", "[if_not_exists]", "[with_clause]"},
		[]string{"CREATE", "COLLECTION", "IF", "NOT", "EXISTS", "named_keyspace_ref", "[with_clause]"},
	},
	"drop_collection": [][]string{
		[]string{"DROP", "COLLECTION", "named_keyspace_ref", "[if_exists]"},
		[]string{"DROP", "COLLECTION", "IF", "EXISTS", "named_keyspace_ref"},
	},
	"flush_collection": [][]string{
		[]string{"flush_or_truncate", "COLLECTION", "named_keyspace_ref"},
	},
	"flush_or_truncate": [][]string{
		[]string{"FLUSH"},
		[]string{"TRUNCATE"},
	},
	"create_index": [][]string{
		[]string{"CREATE", "PRIMARY", "INDEX", "[if_not_exists]", "ON", "named_keyspace_ref", "[index_partition]", "[index_using]", "[with_clause]"},
		[]string{"CREATE", "PRIMARY", "INDEX", "index_name", "[if_not_exists]", "ON", "named_keyspace_ref", "[index_partition]", "[index_using]", "[with_clause]"},
		[]string{"CREATE", "PRIMARY", "INDEX", "IF", "NOT", "EXISTS", "index_name", "ON", "named_keyspace_ref", "[index_partition]", "[index_using]", "[with_clause]"},
		[]string{"CREATE", "[vector]", "INDEX", "index_name", "[if_not_exists]", "ON", "named_keyspace_ref", "LPAREN", "index_terms", "RPAREN", "[index_partition]", "[index_where]", "[index_using]", "[with_clause]"},
		[]string{"CREATE", "[vector]", "INDEX", "IF", "NOT", "EXISTS", "index_name", "ON", "named_keyspace_ref", "LPAREN", "index_terms", "RPAREN", "[index_partition]", "[index_where]", "[index_using]", "[with_clause]"},
	},
	"[vector]": [][]string{
		[]string{"VECTOR"},
	},
	"index_name": [][]string{
		[]string{"permitted_identifiers"},
	},
	"[if_not_exists]": [][]string{
		[]string{"IF", "NOT", "EXISTS"},
	},
	"named_keyspace_ref": [][]string{
		[]string{"simple_named_keyspace_ref"},
		[]string{"namespace_name", "path_part"},
		[]string{"path_part", "DOT", "path_part", "DOT", "keyspace_name"},
		[]string{"path_part", "DOT", "keyspace_name"},
	},
	"simple_named_keyspace_ref": [][]string{
		[]string{"keyspace_name"},
		[]string{"namespace_name", "path_part", "DOT", "path_part", "DOT", "keyspace_name"},
	},
	"named_scope_ref": [][]string{
		[]string{"namespace_name", "path_part", "DOT", "path_part"},
		[]string{"path_part", "DOT", "path_part"},
		[]string{"path_part"},
	},
	"[index_partition]": [][]string{
		[]string{"PARTITION", "BY", "HASH", "LPAREN", "exprs", "RPAREN"},
	},
	"index_using": [][]string{
		[]string{"USING", "VIEW"},
		[]string{"USING", "GSI"},
		[]string{"USING", "FTS"},
	},
	"index_terms": [][]string{
		[]string{"index_term"},
		[]string{"index_terms", "COMMA", "index_term"},
	},
	"index_term": [][]string{
		[]string{"index_term_expr", "[ikattr]"},
	},
	"index_term_expr": [][]string{
		[]string{"expression"},
		[]string{"all_expr"},
	},
	"all_expr": [][]string{
		[]string{"all", "expression"},
		[]string{"all", "DISTINCT", "expression"},
		[]string{"DISTINCT", "expression"},
	},
	"all": [][]string{
		[]string{"ALL"},
		[]string{"EACH"},
	},
	"flatten_keys_expr": [][]string{
		[]string{"expression", "[ikattr]"},
	},
	"flatten_keys_exprs": [][]string{
		[]string{"flatten_keys_expr"},
		[]string{"flatten_keys_exprs", "COMMA", "flatten_keys_expr"},
	},
	"[index_where]": [][]string{
		[]string{"WHERE", "expression"},
	},
	"[ikattr]": [][]string{
		[]string{"ikattr"},
		[]string{"ikattr", "ikattr"},
	},
	"ikattr": [][]string{
		[]string{"ASC"},
		[]string{"DESC"},
		[]string{"INCLUDE", "MISSING"},
	},
	"drop_index": [][]string{
		[]string{"DROP", "PRIMARY", "INDEX", "[if_exists]", "ON", "named_keyspace_ref", "[index_using]"},
		[]string{"DROP", "PRIMARY", "INDEX", "index_name", "[if_exists]", "ON", "named_keyspace_ref", "[index_using]"},
		[]string{"DROP", "PRIMARY", "INDEX", "IF", "EXISTS", "index_name", "ON", "named_keyspace_ref", "[index_using]"},
		[]string{"DROP", "[vector]", "INDEX", "simple_named_keyspace_ref", "DOT", "index_name", "[if_exists]", "[index_using]"},
		[]string{"DROP", "[vector]", "INDEX", "IF", "EXISTS", "simple_named_keyspace_ref", "DOT", "index_name", "[index_using]"},
		[]string{"DROP", "[vector]", "INDEX", "index_name", "[if_exists]", "ON", "named_keyspace_ref", "[index_using]"},
		[]string{"DROP", "[vector]", "INDEX", "IF", "EXISTS", "index_name", "ON", "named_keyspace_ref", "[index_using]"},
	},
	"[if_exists]": [][]string{
		[]string{"IF", "EXISTS"},
	},
	"alter_index": [][]string{
		[]string{"ALTER", "INDEX", "simple_named_keyspace_ref", "DOT", "index_name", "[index_using]", "with_clause"},
		[]string{"ALTER", "INDEX", "index_name", "ON", "named_keyspace_ref", "[index_using]", "with_clause"},
	},
	"build_index": [][]string{
		[]string{"BUILD", "INDEX", "ON", "named_keyspace_ref", "LPAREN", "exprs", "RPAREN", "[index_using]"},
	},
	"create_function": [][]string{
		[]string{"CREATE", "[replace]", "FUNCTION", "[if_not_exists]", "func_name", "LPAREN", "[parm_list]", "RPAREN", "[if_not_exists]", "func_body"},
	},
	"[replace]": [][]string{
		[]string{"OR", "REPLACE"},
	},
	"func_name": [][]string{
		[]string{"short_func_name"},
		[]string{"long_func_name"},
	},
	"short_func_name": [][]string{
		[]string{"keyspace_name"},
		[]string{"path_part", "DOT", "path_part"},
		[]string{"path_part", "DOT", "path_part", "DOT", "path_part"},
	},
	"long_func_name": [][]string{
		[]string{"namespace_term", "keyspace_name"},
		[]string{"namespace_term", "path_part", "DOT", "path_part", "DOT", "keyspace_name"},
	},
	"[parm_list]": [][]string{
		[]string{"DOT", "DOT", "DOT"},
		[]string{"parameter_terms"},
	},
	"parameter_terms": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"parameter_terms", "COMMA", "permitted_identifiers"},
	},
	"func_body": [][]string{
		[]string{"LBRACE", "expression", "RBRACE"},
		[]string{"LANGUAGE", "INLINE", "AS", "expression"},
		[]string{"LANGUAGE", "JAVASCRIPT", "AS", "<quoted string>"},
		[]string{"LANGUAGE", "JAVASCRIPT", "AS", "<quoted string>", "AT", "<quoted string>"},
		[]string{"LANGUAGE", "GOLANG", "AS", "<quoted string>", "AT", "<quoted string>"},
	},
	"drop_function": [][]string{
		[]string{"DROP", "FUNCTION", "func_name", "[if_exists]"},
		[]string{"DROP", "FUNCTION", "IF", "EXISTS", "func_name"},
	},
	"execute_function": [][]string{
		[]string{"EXECUTE", "FUNCTION", "func_name", "LPAREN", "[exprs]", "RPAREN"},
	},
	"update_statistics": [][]string{
		[]string{"UPDATE", "STATISTICS", "[for]", "named_keyspace_ref", "LPAREN", "update_stat_terms", "RPAREN", "[with_clause]"},
		[]string{"UPDATE", "STATISTICS", "[for]", "named_keyspace_ref", "DELETE", "LPAREN", "update_stat_terms", "RPAREN"},
		[]string{"UPDATE", "STATISTICS", "[for]", "named_keyspace_ref", "DELETE", "ALL"},
		[]string{"UPDATE", "STATISTICS", "[for]", "named_keyspace_ref", "INDEX", "LPAREN", "exprs", "RPAREN", "[index_using]", "[with_clause]"},
		[]string{"UPDATE", "STATISTICS", "[for]", "named_keyspace_ref", "INDEX", "ALL", "[index_using]", "[with_clause]"},
		[]string{"UPDATE", "STATISTICS", "FOR", "INDEX", "simple_named_keyspace_ref", "DOT", "index_name", "[index_using]", "[with_clause]"},
		[]string{"UPDATE", "STATISTICS", "FOR", "INDEX", "index_name", "ON", "named_keyspace_ref", "[index_using]", "[with_clause]"},
		[]string{"ANALYZE", "[keyspace_collection]", "named_keyspace_ref", "LPAREN", "update_stat_terms", "RPAREN", "[with_clause]"},
		[]string{"ANALYZE", "[keyspace_collection]", "named_keyspace_ref", "DELETE", "STATISTICS", "LPAREN", "update_stat_terms", "RPAREN"},
		[]string{"ANALYZE", "[keyspace_collection]", "named_keyspace_ref", "DELETE", "STATISTICS"},
		[]string{"ANALYZE", "[keyspace_collection]", "named_keyspace_ref", "INDEX", "LPAREN", "exprs", "RPAREN", "[index_using]", "[with_clause]"},
		[]string{"ANALYZE", "[keyspace_collection]", "named_keyspace_ref", "INDEX", "ALL", "[index_using]", "[with_clause]"},
		[]string{"ANALYZE", "INDEX", "simple_named_keyspace_ref", "DOT", "index_name", "[index_using]", "[with_clause]"},
		[]string{"ANALYZE", "INDEX", "index_name", "ON", "named_keyspace_ref", "[index_using]", "[with_clause]"},
	},
	"[for]": [][]string{
		[]string{"FOR"},
	},
	"update_stat_terms": [][]string{
		[]string{"update_stat_term"},
		[]string{"update_stat_terms", "COMMA", "update_stat_term"},
	},
	"update_stat_term": [][]string{
		[]string{"index_term_expr"},
	},
	"path": [][]string{
		[]string{"permitted_identifiers"},
		[]string{"path", "DOT", "permitted_identifiers"},
		[]string{"path", "DOT", "ident_icase"},
		[]string{"path", "DOT", "LBRACKET", "expression", "RBRACKET"},
		[]string{"path", "DOT", "LBRACKET", "expression", "RBRACKET_ICASE"},
		[]string{"path", "LBRACKET", "expression", "RBRACKET"},
	},
	"ident": [][]string{
		[]string{"permitted_identifiers"},
	},
	"ident_icase": [][]string{
		[]string{"<identifier>i"},
	},
	"expression": [][]string{
		[]string{"c_expr"},
		[]string{"expression", "DOT", "ident", "LPAREN", "[exprs]", "RPAREN"},
		[]string{"expression", "DOT", "ident"},
		[]string{"expression", "DOT", "ident_icase"},
		[]string{"expression", "DOT", "LBRACKET", "expression", "RBRACKET"},
		[]string{"expression", "DOT", "LBRACKET", "expression", "RBRACKET_ICASE"},
		[]string{"expression", "LBRACKET", "RANDOM_ELEMENT", "RBRACKET"},
		[]string{"expression", "LBRACKET", "expression", "RBRACKET"},
		[]string{"expression", "LBRACKET", "expression", "COLON", "RBRACKET"},
		[]string{"expression", "LBRACKET", "expression", "COLON", "expression", "RBRACKET"},
		[]string{"expression", "LBRACKET", "COLON", "expression", "RBRACKET"},
		[]string{"expression", "LBRACKET", "COLON", "RBRACKET"},
		[]string{"expression", "LBRACKET", "RBRACKET"},
		[]string{"expression", "LBRACKET", "STAR", "RBRACKET"},
		[]string{"expression", "PLUS", "expression"},
		[]string{"expression", "MINUS", "expression"},
		[]string{"expression", "STAR", "expression"},
		[]string{"expression", "DIV", "expression"},
		[]string{"expression", "MOD", "expression"},
		[]string{"expression", "POW", "expression"},
		[]string{"expression", "CONCAT", "expression"},
		[]string{"expression", "AND", "expression"},
		[]string{"expression", "OR", "expression"},
		[]string{"NOT", "expression"},
		[]string{"expression", "EQ", "expression"},
		[]string{"expression", "DEQ", "expression"},
		[]string{"expression", "NE", "expression"},
		[]string{"expression", "LT", "expression"},
		[]string{"expression", "GT", "expression"},
		[]string{"expression", "LE", "expression"},
		[]string{"expression", "GE", "expression"},
		[]string{"expression", "BETWEEN", "b_expr", "AND", "b_expr"},
		[]string{"expression", "NOT", "BETWEEN", "b_expr", "AND", "b_expr"},
		[]string{"expression", "LIKE", "expression", "ESCAPE", "expression"},
		[]string{"expression", "LIKE", "expression"},
		[]string{"expression", "NOT", "LIKE", "expression", "ESCAPE", "expression"},
		[]string{"expression", "NOT", "LIKE", "expression"},
		[]string{"expression", "IN", "expression"},
		[]string{"expression", "NOT", "IN", "expression"},
		[]string{"expression", "WITHIN", "expression"},
		[]string{"expression", "NOT", "WITHIN", "expression"},
		[]string{"expression", "IS", "NULL"},
		[]string{"expression", "IS", "NOT", "NULL"},
		[]string{"expression", "IS", "MISSING"},
		[]string{"expression", "IS", "NOT", "MISSING"},
		[]string{"expression", "IS", "valued"},
		[]string{"expression", "IS", "NOT", "UNKNOWN"},
		[]string{"expression", "IS", "NOT", "valued"},
		[]string{"expression", "IS", "UNKNOWN"},
		[]string{"expression", "IS", "DISTINCT", "FROM", "expression"},
		[]string{"expression", "IS", "NOT", "DISTINCT", "FROM", "expression"},
		[]string{"EXISTS", "expression"},
	},
	"valued": [][]string{
		[]string{"VALUED"},
		[]string{"KNOWN"},
	},
	"c_expr": [][]string{
		[]string{"literal"},
		[]string{"sequence_expr"},
		[]string{"construction_expr"},
		[]string{"permitted_identifiers"},
		[]string{"<identifier>i"},
		[]string{"SELF"},
		[]string{"param_expr"},
		[]string{"function_expr"},
		[]string{"MINUS", "expression"},
		[]string{"case_expr"},
		[]string{"collection_expr"},
		[]string{"paren_expr"},
		[]string{"CURRENT", "USER"},
	},
	"b_expr": [][]string{
		[]string{"c_expr"},
		[]string{"b_expr", "DOT", "permitted_identifiers", "LPAREN", "[exprs]", "RPAREN"},
		[]string{"b_expr", "DOT", "permitted_identifiers"},
		[]string{"b_expr", "DOT", "ident_icase"},
		[]string{"b_expr", "DOT", "LBRACKET", "expression", "RBRACKET"},
		[]string{"b_expr", "DOT", "LBRACKET", "expression", "RBRACKET_ICASE"},
		[]string{"b_expr", "LBRACKET", "expression", "RBRACKET"},
		[]string{"b_expr", "LBRACKET", "expression", "COLON", "RBRACKET"},
		[]string{"b_expr", "LBRACKET", "COLON", "expression", "RBRACKET"},
		[]string{"b_expr", "LBRACKET", "expression", "COLON", "expression", "RBRACKET"},
		[]string{"b_expr", "LBRACKET", "COLON", "RBRACKET"},
		[]string{"b_expr", "LBRACKET", "STAR", "RBRACKET"},
		[]string{"b_expr", "PLUS", "b_expr"},
		[]string{"b_expr", "MINUS", "b_expr"},
		[]string{"b_expr", "STAR", "b_expr"},
		[]string{"b_expr", "DIV", "b_expr"},
		[]string{"b_expr", "MOD", "b_expr"},
		[]string{"b_expr", "POW", "b_expr"},
		[]string{"b_expr", "CONCAT", "b_expr"},
	},
	"literal": [][]string{
		[]string{"NULL"},
		[]string{"MISSING"},
		[]string{"FALSE"},
		[]string{"TRUE"},
		[]string{"<numeric literal>"},
		[]string{"<integer literal>"},
		[]string{"<quoted string>"},
	},
	"construction_expr": [][]string{
		[]string{"object"},
		[]string{"array"},
	},
	"object": [][]string{
		[]string{"LBRACE", "[members]", "RBRACE"},
	},
	"members": [][]string{
		[]string{"member"},
		[]string{"members", "COMMA", "member"},
	},
	"member": [][]string{
		[]string{"expression", "COLON", "expression"},
		[]string{"expression", "[as_alias]"},
	},
	"array": [][]string{
		[]string{"LBRACKET", "[exprs]", "RBRACKET"},
	},
	"exprs": [][]string{
		[]string{"expression"},
		[]string{"exprs", "COMMA", "expression"},
	},
	"param_expr": [][]string{
		[]string{"NAMED_PARAM"},
		[]string{"POSITIONAL_PARAM"},
		[]string{"NEXT_PARAM"},
	},
	"case_expr": [][]string{
		[]string{"CASE", "simple_or_searched_case", "END"},
	},
	"simple_or_searched_case": [][]string{
		[]string{"simple_case"},
		[]string{"searched_case"},
	},
	"simple_case": [][]string{
		[]string{"expression", "when_thens", "[else]"},
	},
	"when_thens": [][]string{
		[]string{"WHEN", "expression", "THEN", "expression"},
		[]string{"when_thens", "WHEN", "expression", "THEN", "expression"},
	},
	"searched_case": [][]string{
		[]string{"when_thens", "[else]"},
	},
	"[else]": [][]string{
		[]string{"ELSE", "expression"},
	},
	"function_expr": [][]string{
		[]string{"FLATTEN_KEYS", "LPAREN", "[flatten_keys_exprs]", "RPAREN"},
		[]string{"NTH_VALUE", "LPAREN", "exprs", "RPAREN", "[from_first_last]", "[nulls_treatment]", "window_function_details"},
		[]string{"function_name", "LPAREN", "[exprs]", "RPAREN", "[filter]", "[nulls_treatment]", "[window_function]"},
		[]string{"function_name", "LPAREN", "agg_quantifier", "expression", "RPAREN", "[filter]", "[window_function]"},
		[]string{"function_name", "LPAREN", "STAR", "RPAREN", "[filter]", "[window_function]"},
		[]string{"long_func_name", "LPAREN", "[exprs]", "RPAREN"},
	},
	"function_name": [][]string{
		[]string{"ident"},
		[]string{"REPLACE"},
	},
	"collection_expr": [][]string{
		[]string{"collection_cond"},
		[]string{"collection_xform"},
	},
	"collection_cond": [][]string{
		[]string{"ANY", "coll_bindings", "satisfies", "END"},
		[]string{"SOME", "coll_bindings", "satisfies", "END"},
		[]string{"EVERY", "coll_bindings", "satisfies", "END"},
		[]string{"ANY", "AND", "EVERY", "coll_bindings", "satisfies", "END"},
		[]string{"SOME", "AND", "EVERY", "coll_bindings", "satisfies", "END"},
	},
	"coll_bindings": [][]string{
		[]string{"coll_binding"},
		[]string{"coll_bindings", "COMMA", "coll_binding"},
	},
	"coll_binding": [][]string{
		[]string{"variable", "IN", "expression"},
		[]string{"variable", "WITHIN", "expression"},
		[]string{"variable", "COLON", "variable", "IN", "expression"},
		[]string{"variable", "COLON", "variable", "WITHIN", "expression"},
	},
	"satisfies": [][]string{
		[]string{"SATISFIES", "expression"},
	},
	"collection_xform": [][]string{
		[]string{"ARRAY", "expression", "FOR", "coll_bindings", "[when]", "END"},
		[]string{"FIRST", "expression", "FOR", "coll_bindings", "[when]", "END"},
		[]string{"OBJECT", "expression", "COLON", "expression", "FOR", "coll_bindings", "[when]", "END"},
	},
	"paren_expr": [][]string{
		[]string{"LPAREN", "expression", "RPAREN"},
		[]string{"LPAREN", "all_expr", "RPAREN"},
		[]string{"subquery_expr"},
	},
	"subquery_expr": [][]string{
		[]string{"LPAREN", "fullselect", "RPAREN"},
	},
	"[window_clause]": [][]string{
		[]string{"WINDOW", "window_list"},
	},
	"window_list": [][]string{
		[]string{"window_term"},
		[]string{"window_list", "COMMA", "window_term"},
	},
	"window_term": [][]string{
		[]string{"permitted_identifiers", "AS", "window_specification"},
	},
	"window_specification": [][]string{
		[]string{"LPAREN", "[window_name]", "[window_partition]", "[order_by]", "[window_frame]", "RPAREN"},
	},
	"[window_name]": [][]string{
		[]string{"permitted_identifiers"},
	},
	"[window_partition]": [][]string{
		[]string{"PARTITION", "BY", "exprs"},
	},
	"[window_frame]": [][]string{
		[]string{"window_frame_modifier", "window_frame_extents", "[window_frame_exclusion]"},
	},
	"window_frame_modifier": [][]string{
		[]string{"ROWS"},
		[]string{"RANGE"},
		[]string{"GROUPS"},
	},
	"[window_frame_exclusion]": [][]string{
		[]string{"EXCLUDE", "NO", "OTHERS"},
		[]string{"EXCLUDE", "CURRENT", "ROW"},
		[]string{"EXCLUDE", "TIES"},
		[]string{"EXCLUDE", "GROUP"},
	},
	"window_frame_extents": [][]string{
		[]string{"window_frame_extent"},
		[]string{"BETWEEN", "window_frame_extent", "AND", "window_frame_extent"},
	},
	"window_frame_extent": [][]string{
		[]string{"UNBOUNDED", "PRECEDING"},
		[]string{"UNBOUNDED", "FOLLOWING"},
		[]string{"CURRENT", "ROW"},
		[]string{"expression", "window_frame_valexpr_modifier"},
	},
	"window_frame_valexpr_modifier": [][]string{
		[]string{"PRECEDING"},
		[]string{"FOLLOWING"},
	},
	"nulls_treatment": [][]string{
		[]string{"RESPECT", "NULLS"},
		[]string{"IGNORE", "NULLS"},
	},
	"[from_first_last]": [][]string{
		[]string{"FROM", "first_last"},
	},
	"agg_quantifier": [][]string{
		[]string{"ALL"},
		[]string{"DISTINCT"},
	},
	"[filter]": [][]string{
		[]string{"FILTER", "LPAREN", "where", "RPAREN"},
	},
	"[window_function]": [][]string{
		[]string{"window_function_details"},
	},
	"window_function_details": [][]string{
		[]string{"OVER", "permitted_identifiers"},
		[]string{"OVER", "window_specification"},
	},
	"start_transaction": [][]string{
		[]string{"start_or_begin", "transaction", "[isolation_level]"},
	},
	"commit_transaction": [][]string{
		[]string{"COMMIT", "[transaction]"},
	},
	"rollback_transaction": [][]string{
		[]string{"ROLLBACK", "[transaction]", "[savepoint]"},
	},
	"start_or_begin": [][]string{
		[]string{"START"},
		[]string{"BEGIN"},
	},
	"transaction": [][]string{
		[]string{"TRAN"},
		[]string{"TRANSACTION"},
		[]string{"WORK"},
	},
	"[savepoint]": [][]string{
		[]string{"TO", "SAVEPOINT", "savepoint_name"},
	},
	"savepoint_name": [][]string{
		[]string{"permitted_identifiers"},
	},
	"isolation_level": [][]string{
		[]string{"ISOLATION", "LEVEL", "isolation_val"},
	},
	"isolation_val": [][]string{
		[]string{"READ", "COMMITTED"},
	},
	"set_transaction_isolation": [][]string{
		[]string{"SET", "TRANSACTION", "isolation_level"},
	},
	"savepoint": [][]string{
		[]string{"SAVEPOINT", "savepoint_name"},
	},
	"with_clause": [][]string{
		[]string{"WITH", "expression"},
	},
	"sequence_object_name": [][]string{
		[]string{"permitted_identifiers"},
	},
	"sequence_full_name": [][]string{
		[]string{"[namespace_name]", "sequence_object_name"},
		[]string{"[namespace_name]", "path_part", "DOT", "path_part", "DOT", "sequence_object_name"},
		[]string{"[namespace_name]", "path_part", "DOT", "sequence_object_name"},
	},
	"sequence_statement": [][]string{
		[]string{"create_sequence"},
		[]string{"drop_sequence"},
		[]string{"alter_sequence"},
	},
	"create_sequence": [][]string{
		[]string{"CREATE", "SEQUENCE", "sequence_name_options", "[seq_create_options]"},
	},
	"sequence_name_options": [][]string{
		[]string{"sequence_name_option"},
		[]string{"sequence_name_options", "sequence_name_option"},
	},
	"sequence_name_option": [][]string{
		[]string{"IF", "NOT", "EXISTS"},
		[]string{"sequence_full_name"},
	},
	"[seq_create_options]": [][]string{
		[]string{"[seq_create_options]", "seq_create_option"},
	},
	"seq_create_option": [][]string{
		[]string{"sequence_with"},
		[]string{"start_with"},
		[]string{"increment_by"},
		[]string{"maxvalue"},
		[]string{"minvalue"},
		[]string{"cycle"},
		[]string{"cache"},
	},
	"drop_sequence": [][]string{
		[]string{"DROP", "SEQUENCE", "sequence_full_name", "[if_exists]"},
		[]string{"DROP", "SEQUENCE", "IF", "EXISTS", "sequence_full_name"},
	},
	"alter_sequence": [][]string{
		[]string{"ALTER", "SEQUENCE", "sequence_full_name", "with_clause"},
		[]string{"ALTER", "SEQUENCE", "sequence_full_name", "seq_alter_options"},
	},
	"seq_alter_options": [][]string{
		[]string{"seq_alter_option"},
		[]string{"seq_alter_options", "seq_alter_option"},
	},
	"seq_alter_option": [][]string{
		[]string{"restart_with"},
		[]string{"increment_by"},
		[]string{"maxvalue"},
		[]string{"minvalue"},
		[]string{"cycle"},
		[]string{"cache"},
	},
	"sequence_with": [][]string{
		[]string{"WITH", "expression"},
	},
	"start_with": [][]string{
		[]string{"START", "WITH", "expression"},
	},
	"restart_with": [][]string{
		[]string{"RESTART"},
		[]string{"RESTART", "WITH", "expression"},
	},
	"increment_by": [][]string{
		[]string{"INCREMENT", "BY", "expression"},
	},
	"maxvalue": [][]string{
		[]string{"NO", "MAXVALUE"},
		[]string{"MAXVALUE", "expression"},
	},
	"minvalue": [][]string{
		[]string{"NO", "MINVALUE"},
		[]string{"MINVALUE", "expression"},
	},
	"cycle": [][]string{
		[]string{"NO", "CYCLE"},
		[]string{"CYCLE"},
	},
	"cache": [][]string{
		[]string{"NO", "CACHE"},
		[]string{"CACHE", "expression"},
	},
	"sequence_next": [][]string{
		[]string{"NEXTVAL", "FOR", "permitted_identifiers"},
		[]string{"NEXT", "VALUE", "FOR", "permitted_identifiers"},
	},
	"sequence_prev": [][]string{
		[]string{"PREVVAL", "FOR", "permitted_identifiers"},
		[]string{"PREV", "VALUE", "FOR", "permitted_identifiers"},
	},
	"sequence_expr": [][]string{
		[]string{"sequence_next"},
		[]string{"sequence_prev"},
	},
}
