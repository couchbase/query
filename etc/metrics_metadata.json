{
	"n1ql_active_requests": {
		"type": "gauge",
		"help": "Total number of active requests.",
		"added": "7.0.0",
		"notes": "This metric was named query_active_requests in versions before 7.0.0."
	},
	"n1ql_allocated_values": {
		"type": "counter",
		"help": "The total number of values allocated in the query engine.",
		"added": "7.6.0"
	},
	"n1ql_at_plus": {
		"type": "counter",
		"help": "Total number of N1QL requests with at_plus index consistency.",
		"added": "7.0.0"
	},
	"n1ql_audit_actions": {
		"type": "counter",
		"help": "The total number of audit records sent to the server. Some requests cause more than one audit record to be emitted. Records in the output queue that have not yet been sent to the server are not counted.",
		"added": "7.0.0"
	},
	"n1ql_audit_actions_failed": {
		"type": "counter",
		"help": "The total number of audit records sent to the server that failed.",
		"added": "7.0.0"
	},
	"n1ql_audit_requests_filtered": {
		"type": "counter",
		"help": "The number of potentially auditable requests that cause no audit action to be taken.",
		"added": "7.0.0"
	},
	"n1ql_audit_requests_total": {
		"type": "counter",
		"help": "The total number of potentially auditable requests sent to the query engine.",
		"added": "7.0.0"
	},
	"n1ql_bucket_reads": {
		"type": "gauge",
		"help": "The total number of reads on the bucket.",
		"notes": "This is a metric specific to provisioned mode.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_bucket_retries": {
		"type": "gauge",
		"help": "The total number of retries on the bucket.",
		"notes": "This is a metric specific to provisioned mode.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_bucket_writes": {
		"type": "gauge",
		"help": "The total number of writes on the bucket.",
		"notes": "This is a metric specific to provisioned mode.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_bulk_get_errors": {
		"type": "counter",
		"help": "Count of errors due to bulk get operations",
		"added": "7.2.4"
	},
	"n1ql_cancelled": {
		"type": "counter",
		"help": "Total number of cancelled requests.",
		"added": "7.0.0"
	},
	"n1ql_cas_mismatch_errors": {
		"type": "counter",
		"help": "Count of CAS mismatch errors",
		"added": "7.2.4"
	},
	"n1ql_deletes": {
		"type": "counter",
		"help": "Total number of DELETE operations.",
		"added": "7.0.0"
	},
	"n1ql_engine_error_count": {
		"type": "counter",
		"help": "Total number of system-caused errors.",
		"added": "8.0.0"
	},
	"n1ql_errors": {
		"type": "counter",
		"help": "The total number of N1QL errors returned so far.",
		"added": "7.0.0",
		"uiName": "N1QL Error Rate",
		"notes": "In the Couchbase Server UI this metric is computed as a rate, with a display name of \"N1QL Error Rate\" or n1ql_errors. This metric was named query_errors in versions before 7.0.0."
	},
	"n1ql_index_scans": {
		"type": "counter",
		"help": "Total number of secondary index scans.",
		"added": "7.0.0"
	},
	"n1ql_index_scans_gsi": {
		"type": "counter",
		"help": "Total number of index scans performed by GSI.",
		"added": "7.2.4",
		"notes": "This is a sub-division of n1ql_index_scans."
	},
	"n1ql_index_scans_fts": {
		"type": "counter",
		"help": "Total number of index scans performed by FTS.",
		"added": "7.2.4",
		"notes": "This is a sub-division of n1ql_index_scans."
	},
	"n1ql_index_scans_seq": {
		"type": "counter",
		"help": "Total number of sequential scans.",
		"added": "7.6.0",
		"notes": "This is a sub-division of n1ql_index_scans."
	},
	"n1ql_inserts": {
		"type": "counter",
		"help": "Total number of INSERT operations.",
		"added": "7.0.0"
	},
	"n1ql_invalid_requests": {
		"type": "counter",
		"help": "Total number of requests for unsupported endpoints.",
		"added": "7.0.0",
		"uiName": "N1QL Invalid Request Rate",
		"notes": "In the Couchbase Server UI this metric is computed as a rate, with a display name of \"N1QL Invalid Request Rate\" or n1ql_invalid_requests. This metric was named query_invalid_requests in versions before 7.0.0."
	},
	"n1ql_load": {
		"type": "gauge",
		"help": "The current utilization factor of the servicers on the query node.",
		"notes": "This metric is a value ranging from 0 to beyond 100. A value of 0 indicates that there are no servicers that are busy. 100 indicates that all servicers are busy. Greater than 100 indicates that all servicers are busy and there are queued requests.",
		"added": "7.0.0"
	},
	"n1ql_load_factor": {
		"type": "gauge",
		"added": "7.6.0",
		"help": "The total load factor of the query node.",
		"notes": "The load factor is a value from 0 to 100. It is the maximum of 3 values. The Servicer Load, CPU Usage and Memory Usage. It is calculated every 30 seconds and reported as a moving average over the last 15 minutes."
	},
	"n1ql_mutations": {
		"type": "counter",
		"help": "Total number of document mutations.",
		"added": "7.0.0"
	},
	"n1ql_node_memory": {
		"type": "gauge",
		"added": "7.6.0",
		"help": "The total size of in use memory in the query node.",
		"unit": "bytes"
	},
	"n1ql_prepared": {
		"type": "counter",
		"help": "Total number of prepared statements executed.",
		"added": "7.0.0"
	},
	"n1ql_primary_scans": {
		"type": "counter",
		"help": "Total number of primary index scans.",
		"added": "7.0.0"
	},
	"n1ql_primary_scans_gsi": {
		"type": "counter",
		"help": "Total number of primary scans performed by GSI.",
		"added": "7.2.4",
		"notes": "This is a sub-division of n1ql_primary_scans."
	},
	"n1ql_primary_scans_fts": {
		"type": "counter",
		"help": "Total number of primary scans performed by FTS.",
		"added": "7.2.4",
		"notes": "This is a sub-division of n1ql_primary_scans."
	},
	"n1ql_primary_scans_seq": {
		"type": "counter",
		"help": "Total number of primary sequential scans.",
		"added": "7.6.0",
		"notes": "This is a sub-division of n1ql_primary_scans."
	},
	"n1ql_queued_requests": {
		"type": "gauge",
		"help": "Total number of queued requests.",
		"added": "7.0.0",
		"notes": "This metric was named query_queued_requests in versions before 7.0.0."
	},
	"n1ql_request_time": {
		"type": "counter",
		"help": "Total end-to-end time to process all queries.",
		"added": "7.0.0",
		"unit": "nanoseconds",
		"uiName": "Query Request Time",
		"notes": "In the Couchbase Server UI this metric is computed as an average, with a display name of \"Query Request Time\" or n1ql_avg_req_time. This metric was named query_request_time in versions before 7.0.0."
	},
	"n1ql_requests": {
		"type": "counter",
		"help": "Total number of N1QL requests.",
		"added": "7.0.0",
		"uiName": "N1QL Request Rate",
		"notes": "In the Couchbase Server UI this metric is computed as a rate, with a display name of \"N1QL Request Rate\" or n1ql_requests. This metric was named query_requests in versions before 7.0.0."
	},
	"n1ql_requests_1000ms": {
		"type": "counter",
		"help": "Number of queries that take longer than 1000ms.",
		"added": "7.0.0",
		"uiName": "Queries > 1000ms",
		"notes": "This metric was named query_requests_1000ms in versions before 7.0.0."
	},
	"n1ql_requests_250ms": {
		"type": "counter",
		"help": "Number of queries that take longer than 250ms.",
		"added": "7.0.0",
		"uiName": "Queries > 250ms",
		"notes": "This metric was named query_requests_250ms in versions before 7.0.0."
	},
	"n1ql_requests_5000ms": {
		"type": "counter",
		"help": "Number of queries that take longer than 5000ms.",
		"added": "7.0.0",
		"uiName": "Queries > 5000ms",
		"notes": "This metric was named query_requests_5000ms in versions before 7.0.0."
	},
	"n1ql_requests_500ms": {
		"type": "counter",
		"help": "Number of queries that take longer than 500ms.",
		"added": "7.0.0",
		"uiName": "Queries > 500ms",
		"notes": "This metric was named query_requests_500ms in versions before 7.0.0."
	},
	"n1ql_result_count": {
		"type": "counter",
		"help": "Total number of results (documents) returned by the query engine.",
		"added": "7.0.0",
		"uiName": "Query Result Items",
		"notes": "In the Couchbase Server UI this metric is computed as an average, with a display name of \"Query Result Items\" or n1ql_avg_result_count. This metric was named query_result_count in versions before 7.0.0."
	},
	"n1ql_result_size": {
		"type": "counter",
		"help": "Total size of data returned by the query engine.",
		"added": "7.0.0",
		"unit": "bytes",
		"uiName": "Query Result Size",
		"notes": "In the Couchbase Server UI this metric is computed as an average, with a display name of \"Query Result Size\" or n1ql_avg_response_size. This metric was named query_result_size in versions before 7.0.0."
	},
	"n1ql_scan_plus": {
		"type": "counter",
		"help": "Total number of N1QL requests with request_plus index consistency.",
		"added": "7.0.0"
	},
	"n1ql_selects": {
		"type": "counter",
		"help": "Total number of SELECT requests.",
		"added": "7.0.0",
		"uiName": "N1QL Select Rate",
		"notes": "In the Couchbase Server UI this metric is computed as a rate, with a display name of \"N1QL Select Rate\" or n1ql_selects. This metric was named query_selects in versions before 7.0.0."
	},
	"n1ql_service_time": {
		"type": "counter",
		"help": "Time to execute all queries.",
		"added": "7.0.0",
		"unit": "nanoseconds",
		"uiName": "Query Execution Time",
		"notes": "In the Couchbase Server UI this metric is computed as an average, with a display name of \"Query Execution Time\" or n1ql_avg_svc_time. This metric was named query_service_time in versions before 7.0.0."
	},
	"n1ql_temp_space_errors": {
		"type": "counter",
		"help": "Count of temp space related errors",
		"added": "7.6.0"
	},
	"n1ql_tenant_memory": {
		"type": "gauge",
		"added": "7.6.0",
		"help": "The total size of in use tenant memory.",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket"
		],
		"unit": "bytes"
	},
	"n1ql_tenant_reads": {
		"type": "gauge",
		"help": "The total number of reads on the tenant.",
		"notes": "This is a metric specific to serverless.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_tenant_retries": {
		"type": "gauge",
		"help": "The total number of retries on the tenant.",
		"notes": "This is a metric specific to serverless.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_tenant_writes": {
		"type": "gauge",
		"help": "The total number of writes on the tenant.",
		"notes": "This is a metric specific to serverless.",
		"added": "7.6.0",
		"labels": [
			"bucket"
		]
	},
	"n1ql_timeouts": {
		"type": "counter",
		"help": "Count of request timeout errors",
		"added": "7.2.4"
	},
	"n1ql_transaction_time": {
		"type": "counter",
		"help": "Total elapsed time of transactions so far.",
		"added": "7.0.0",
		"unit": "nanoseconds"
	},
	"n1ql_transactions": {
		"type": "counter",
		"help": "Total number of transactions.",
		"added": "7.0.0"
	},
	"n1ql_unauthorized_users": {
		"type": "counter",
		"help": "Count of unauthorized access errors",
		"added": "7.2.4"
	},
	"n1ql_unbounded": {
		"type": "counter",
		"help": "Total number of N1QL requests with not_bounded index consistency.",
		"added": "7.0.0"
	},
	"n1ql_updates": {
		"type": "counter",
		"help": "Total number of UPDATE requests.",
		"added": "7.0.0"
	},
	"n1ql_user_error_count": {
		"type": "counter",
		"help": "Total number of user-caused errors.",
		"added": "8.0.0"
	},
	"n1ql_warnings": {
		"type": "counter",
		"help": "The total number of N1QL warnings returned so far.",
		"added": "7.0.0",
		"uiName": "N1QL Warning Rate",
		"notes": "In the Couchbase Server UI this metric is computed as a rate, with a display name of \"N1QL Warning Rate\" or n1ql_warnings. This metric was named query_warnings in versions before 7.0.0."
	},
	"n1ql_tenant_kv_throttle_count": {
		"type": "gauge",
		"help": "The total number of times KV has been throttled for queries on this tenant.",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket"
		]
	},
	"n1ql_tenant_kv_throttle_seconds_total": {
		"type": "gauge",
		"help": "The total amount of time KV has been throttled for queries on this tenant.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket"
		]
	},
	"n1ql_throttle_seconds_total": {
		"type": "counter",
		"help": "The total time spent throttling (in seconds).",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for"
		]
	},
	"n1ql_throttle_count_total": {
		"type": "counter",
		"help": "The number of times Regulator instructed an operation to throttle.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for"
		]
	},
	"n1ql_reject_count_total": {
		"type": "counter",
		"help": "The number of times Regulator instructed an operation to be rejected.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for"
		]
	},
	"n1ql_op_count_total": {
		"type": "counter",
		"help": "The number of distinct operations recorded with Regulator.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for"
		]
	},
	"n1ql_mem_quota_exceeded_errors": {
		"type": "counter",
		"help": "Count of memory quota exceeded errrors",
		"added": "7.2.4"
	},
	"n1ql_meter_cu_total": {
		"type": "counter",
		"help": "The number of Compute Units (CUs) recorded.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for",
			"unbilled",
			"variant"
		]
	},
	"n1ql_credit_cu_total": {
		"type": "counter",
		"help": "The number of Compute Units (CUs) refunded.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for",
			"variant"
		]
	},
	"n1ql_counter_cu_total": {
		"type": "counter",
		"help": "The number of distinct operations recording Compute Units (CUs) with Regulator.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for",
			"unbilled",
			"variant"
		]
	},
	"n1ql_credit_wu_total": {
		"type": "counter",
		"help": "The number of Write Units (WUs) refunded.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for",
			"variant"
		]
	},
	"n1ql_credit_ru_total": {
		"type": "counter",
		"help": "The number of Read Units (RUs) refunded.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless.",
		"labels": [
			"bucket",
			"for",
			"variant"
		]
	},
	"n1ql_boot_timestamp_seconds": {
		"type": "gauge",
		"help": "The time the service booted in fractional seconds since Unix epoch.",
		"unit": "seconds",
		"added": "7.6.0",
		"notes": "This is a metric specific to serverless."
	},
	"n1ql_node_rss": {
		"type": "gauge",
		"added": "7.6.1",
		"help": "The resident set size (RSS) of the query node process.",
		"unit": "bytes"
	},
	"n1ql_curl_calls": {
		"type": "counter",
		"added": "7.6.2",
		"help": "The number of CURL() calls made by statements."
	},
	"n1ql_curl_call_errors": {
		"type": "counter",
		"added": "7.6.2",
		"help": "The number of CURL() calls made by statements that failed (returned an error)."
	},
	"n1ql_temp_hwm": {
		"type": "counter",
		"help": "High water mark for temp space use.",
		"added": "8.0.0"
	},
	"n1ql_temp_usage": {
		"type": "gauge",
		"help": "Current temp space use.",
		"added": "8.0.0"
	},
	"n1ql_spills_order": {
		"type": "counter",
		"help": "Number of order by operations that have spilled to disk.",
		"added": "8.0.0"
	},
	"n1ql_spills_group": {
		"type": "counter",
		"help": "Number of group by operations that have spilled to disk.",
		"added": "8.0.0",
		"notes": "Group by operations have multiple phases each of which is counted separately if spilled."
	}
}
