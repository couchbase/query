[
    {
       "testcase": "Index Scan on MISSING index. Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' END"
        },
       "statements": "SELECT META(l).id FROM orders._default.lkm AS l",
       "results": [
           {"id": "scurry01"},
           {"id": "wiggins01"},
           {"id": "igudoala01"},
           {"id": "green01"},
           {"id": "thompson01"}
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. Index order. limit. offset. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.index_order IS NOT MISSING AND v.`limit` IS NOT MISSING AND v.`offset` IS NOT MISSING END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l ORDER BY l.fname DESC LIMIT 2 OFFSET 1",
       "ordered": true,
       "results": [
           {"id": "wiggins01"},
           {"id": "igudoala01"}
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. Index order. limit. offset. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.index_order IS NOT MISSING AND v.`limit` IS NOT MISSING AND v.`offset` IS NOT MISSING END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.team = 'gsw' ORDER BY l.fname DESC LIMIT 2 OFFSET 1",
       "ordered": true,
       "results": [
           {"id": "wiggins01"},
           {"id": "igudoala01"}
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. Index order. limit. offset. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.index_order IS NOT MISSING AND v.`limit` IS NOT MISSING AND v.`offset` IS NOT MISSING END"
        },
       "statements": "SELECT l.fname, l.lname FROM lkm AS l WHERE l.team = 'gsw' ORDER BY l.fname DESC LIMIT 2 OFFSET 1",
       "ordered": true,
       "results": [
          {
              "fname": "Andrew",
              "lname": "Wiggins"
          },
          {
              "fname": "Andre",
              "lname": "Iguodala"
          }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Non Cover. Index order. limit. offset. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS MISSING AND v.`index` = 'mix1' AND v.index_order IS NOT MISSING AND v.`limit` IS NOT MISSING AND v.`offset` IS NOT MISSING END"
        },
       "statements": "SELECT l.fname, l.lname, l.city FROM lkm AS l WHERE l.team = 'gsw' ORDER BY l.fname DESC LIMIT 2 OFFSET 1",
       "ordered": true,
       "results": [
          {
              "city": "Oakland",
              "fname": "Andrew",
              "lname": "Wiggins"
          },
          {
              "city": "Oakland",
              "fname": "Andre",
              "lname": "Iguodala"
          }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Non Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS MISSING AND v.`index` = 'mix1' END"
        },
       "statements": "SELECT DISTINCT l.city FROM lkm AS l WHERE l.zipcode = 94501",
       "results": [
           { "city": "Oakland" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. On leading key MISSING predicate Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.spans[0].`range`[0].`high` = 'null' END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.fname IS MISSING",
       "results": [
           { "id": "thompson01" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. On leading key NULL predicate Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.spans[0].`range`[0].`high` = 'null' AND v.spans[0].`range`[0].`low` = 'null' END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.fname IS NULL",
       "results": [
           { "id": "green01" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. On leading key NOT VALUED predicate Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.spans[0].`range`[0].`high` = 'null' END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.fname IS NOT VALUED",
       "results": [
           { "id": "thompson01" },
           { "id": "green01" }
        ]
    },
    {
       "testcase": "Index Scan on non-MISSING index. Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'ix_city_state' END"
        },
       "statements": "SELECT DISTINCT l.state FROM lkm AS l WHERE l.city = 'Oakland'",
       "results": [
              { "state": "California" }
        ]
    },
    {
       "testcase": "Index Scan on non-MISSING index. Non-Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS MISSING AND v.`index` = 'ix_city_state' END"
        },
       "statements": "SELECT DISTINCT l.state, l.country FROM lkm AS l WHERE l.city = 'Oakland'",
       "results": [
           { "state": "California" },
           { "state": "California", "country": "USA" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND ARRAY_LENGTH(v.spans) == 2 END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.fname = 'Stephen' OR l.lname = 'Klay Thompson'",
       "results": [
          { "id": "scurry01" },
          { "id": "thompson01" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Non-Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'UnionScan%' AND ARRAY_LENGTH(v.scans) == 2 END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.fname = 'Stephen' OR l.city = 'Oakland'",
       "results": [
          { "id": "green01" },
          { "id": "igudoala01" },
          { "id": "scurry01" },
          { "id": "thompson01" },
          { "id": "wiggins01" }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Non-Cover. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'UnionScan%' AND ARRAY_LENGTH(v.scans) == 2 END"
        },
       "statements": "SELECT META(l).id FROM lkm AS l WHERE l.lname = 'Curry' OR l.city = 'Oakland'",
       "results": [
          { "id": "green01" },
          { "id": "igudoala01" },
          { "id": "scurry01" },
          { "id": "thompson01" },
          { "id": "wiggins01" }
        ]
    },
    {
       "testcase": "Index Scan on non-MISSING index. Cover. Index Aggregates. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'ix_city_state' AND v.`index_group_aggs` IS NOT MISSING END"
        },
       "statements": "SELECT COUNT(1) AS cnt FROM lkm AS l WHERE l.city = 'Oakland'",
       "results": [
          { "cnt": 5 }
        ]
    },
    {
       "testcase": "Index Scan on MISSING index. Cover. Index Aggregates. Explain",
       "queryParams": {"query_context": "orders._default"},
       "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {"present":true}
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`covers` IS NOT MISSING AND v.`index` = 'mix1' AND v.`index_group_aggs` IS NOT MISSING END"
        },
       "statements": "SELECT COUNT(1) AS cnt FROM lkm AS l WHERE l.team = 'gsw'",
       "results": [
          { "cnt": 5 }
        ]
    }
]
