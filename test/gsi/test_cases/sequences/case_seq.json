[
    {
        "statements": "DROP SEQUENCE IF EXISTS orders.seqs.seq1",
        "results": []
    },
    {
        "statements": "DROP SEQUENCE IF EXISTS orders.seqs.seq2",
        "results": []
    },
    {
        "statements": "DROP SEQUENCE IF EXISTS orders.seqs.seq3",
        "results": []
    },
    {
        "statements": "DROP SEQUENCE IF EXISTS orders.seqs.seq4",
        "results": []
    },
    {
        "statements": "CREATE SEQUENCE orders.seqs.seq1",
        "results": []
    },
    {
        "statements": "CREATE SEQUENCE orders.seqs.seq2 WITH {\"increment\":-1}",
        "results": []
    },
    {
        "statements": "CREATE SEQUENCE orders.seqs.seq3 START WITH 1000 MINVALUE 999 MAXVALUE 1001 CYCLE",
        "results": []
    },
    {
        "statements": "CREATE SEQUENCE orders.seqs.seq4 START WITH 2000 MAXVALUE 2002 NO CYCLE",
        "results": []
    },
    {
       "statements": "SELECT idx, NEXT VALUE FOR orders.seqs.seq1 sv FROM array_range(0,5) idx",
       "results": [
            { "idx": 0, "sv": 0 },
            { "idx": 1, "sv": 1 },
            { "idx": 2, "sv": 2 },
            { "idx": 3, "sv": 3 },
            { "idx": 4, "sv": 4 }
        ]
    },
    {
       "statements": "SELECT idx, NEXT VALUE FOR orders.seqs.seq2 sv FROM array_range(0,5) idx",
       "results": [
            { "idx": 0, "sv": 0 },
            { "idx": 1, "sv": -1 },
            { "idx": 2, "sv": -2 },
            { "idx": 3, "sv": -3 },
            { "idx": 4, "sv": -4 }
        ]
    },
    {
       "statements": "SELECT idx, NEXT VALUE FOR orders.seqs.seq3 sv FROM array_range(0,3) idx",
       "results": [
            { "idx": 0, "sv": 1000 },
            { "idx": 1, "sv": 1001 },
            { "idx": 2, "sv": 999 }
        ]
    },
    {
       "statements": "SELECT idx, NEXT VALUE FOR orders.seqs.seq4 sv FROM array_range(0,5) idx",
       "results": [
            { "idx": 0, "sv": 2000 },
            { "idx": 1, "sv": 2001 },
            { "idx": 2, "sv": 2002 }
        ],
        "errorCode":5010
    },
    {
        "statements": "BEGIN WORK"
    },
    {
        "statements": "INSERT INTO orders VALUES(TO_STRING(NEXTVAL FOR orders.seqs.seq1),{\"id\":NEXTVAL FOR orders.seqs.seq1,\"test_id\":\"seq\"})",
        "results": []
    },
    {
        "statements": "INSERT INTO orders VALUES(TO_STRING(NEXTVAL FOR orders.seqs.seq1),{\"id\":PREVVAL FOR orders.seqs.seq1,\"test_id\":\"seq\"})",
        "results": []
    },
    {
        "statements": "INSERT INTO orders(KEY k,VALUE v) SELECT TO_STRING(NEXTVAL FOR orders.seqs.seq1) k,{\"id\":NEXTVAL FOR orders.seqs.seq1,\"test_id\":\"seq\"} v",
        "results": []
    },
    {
        "statements": "COMMIT"
    },
    {
        "statements": "SELECT meta().id,* FROM orders WHERE test_id = 'seq'",
        "results": [
            {"id":"5","orders":{"id":6,"test_id":"seq"}},
            {"id":"7","orders":{"id":7,"test_id":"seq"}},
            {"id":"8","orders":{"id":8,"test_id":"seq"}}
        ]
    },
    {
        "statements": "ALTER SEQUENCE orders.seqs.seq1 RESTART WITH 100",
        "results": []
    },
    {
        "statements": "SELECT *, y, NEXT VALUE FOR orders.seqs.seq1 nv1, NEXT VALUE FOR orders.seqs.seq1 nv2, x FROM array_range(0,3) idx LET x = NEXT VALUE FOR orders.seqs.seq1 ,y = (SELECT PREV VALUE FOR orders.seqs.seq1 pv, NEXT VALUE FOR orders.seqs.seq1 nv FROM array_range(0, 2) idx2, idx for_correlation) ORDER BY idx",
        "results": [
            {"idx":0,"y":[{"pv":100,"nv":101},{"pv":101,"nv":102}],"nv1":100,"nv2":100,"x":100},
            {"idx":1,"y":[{"pv":103,"nv":104},{"pv":104,"nv":105}],"nv1":103,"nv2":103,"x":103},
            {"idx":2,"y":[{"pv":106,"nv":107},{"pv":107,"nv":108}],"nv1":106,"nv2":106,"x":106}
        ]
    },
    {
        "statements": "DELETE FROM orders WHERE test_id = 'seq'",
        "results":[]
    }
]
