[
    {
        "testcase": "MB-62274",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true,
                    "cost": true,
                    "cardinality": true
                }
            ],
            "statement": "SELECT true AS present, p.cost IS NOT MISSING AS cost, p.cardinality IS NOT MISSING AS cardinality FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'Join' AND v.`as` = 'l' AND v.`on_filter` IS MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.*, r.* FROM shellTest r LEFT JOIN shellTest l USE NL ON META(l).id = CASE WHEN r.c21 IS VALUED THEN REPLACE(meta(r).id, \"test2\", \"test1\") ELSE NULL END WHERE r.type = \"right\" AND r.c21 IN [1,5]",
        "results": [
            {
                "a11": [
                    1,
                    2,
                    3,
                    4
                ],
                "c11": 1,
                "c12": 10,
                "a21": [
                    1,
                    10,
                    20
                ],
                "a22": [
                    1,
                    2,
                    3,
                    4
                ],
                "c21": 1,
                "c22": 10,
                "test_id": "ansijoin",
                "type": "right"
            },
            {
                "a21": [
                    5,
                    15,
                    25
                ],
                "a22": [
                    1,
                    2,
                    3,
                    4
                ],
                "c21": 5,
                "c22": 50,
                "test_id": "ansijoin",
                "type": "right"
            }
	]
    },
    {
        "testcase": "MB-63702",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND ARRAY_LENGTH(v.`covers`) > 0 END AND ANY u WITHIN p.`~subqueries` SATISFIES u.`#operator` LIKE 'IndexScan%' AND ARRAY_LENGTH(u.`covers`) > 0 END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT MIN(f1.c13+f2.c23) AS x FROM ( SELECT d1.c10, d1.c11, d1.c13 FROM shellTest AS d1 WHERE d1.c10 = 0 AND d1.c14 != \"XX\" AND d1.c11 = 1 AND d1.c13 = 3 AND d1.c16 != d1.c15 ) AS f1 JOIN ( SELECT d2.c20, d2.c21, d2.c23 FROM shellTest AS d2 WHERE d2.c20 = 0 AND d2.c24 != \"XX\" AND d2.c21 = 2 AND d2.c23 = 6 AND d2.c26 != d2.c25 ) AS f2 ON f1.c11 = f2.c20 WHERE f1.c11 != f2.c21",
        "results": [
            {
                "x": null
            }
        ]
    }
]

