[
    {
        "testcase": "MB-32354",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'c' AND ANY w WITHIN v.`~child`.`~children` SATISFIES w.`#operator` LIKE 'IndexScan%' AND array_length(w.`covers`) > 0 AND w.`filter_covers` IS NOT MISSING END END"
        },
        "statements":"SELECT d.c11 FROM shellTest d JOIN shellTest b ON d.c11 = b.c21 AND b.type = \"right\" JOIN shellTest c ON d.c11 = c.c21 AND c.type = \"right\" WHERE d.type = \"left\" AND d.c11 < 2",
        "results": [
        {
            "c11": 1
        }
	]
    },
    {
        "testcase": "MB-38564 part1",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` = true AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 1 END END"
        },
        "statements":"SELECT l.c11, r.c21 FROM shellTest l LEFT JOIN shellTest r ON l.c12 = r.c22 AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2 AND r.c21 IS MISSING",
        "results": [
        {
            "c11": 4
        }
	]
    },
    {
        "testcase": "MB-38564 part2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` = true AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 2 END END"
        },
        "statements":"SELECT l.c11, r.c21 FROM shellTest l LEFT JOIN shellTest r ON l.c12 = r.c22 AND r.c21 IS MISSING AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2",
        "results": [
        {
            "c11": 3
        },
        {
            "c11": 4
        }
	]
    },
    {
        "testcase": "MB-38564 part3",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` IS MISSING AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 2 END END"
        },
        "statements":"SELECT l.c11, r.c22 FROM shellTest l LEFT JOIN shellTest r USE INDEX(st_ix23) ON l.c12 = r.c22 AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2 AND r.c21 IS NOT MISSING",
        "results": [
        {
            "c11": 3,
            "c22": 30
        }
	]
    },
    {
        "testcase": "MB-38564 part4",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` = true AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 1 END END"
        },
        "statements":"SELECT l.c11, r.c22, s.c22 AS s22 FROM shellTest l LEFT JOIN shellTest r ON l.c12 = r.c22 AND r.type = \"right\" JOIN shellTest s ON s.c21 = l.c11 + 2 AND s.type = \"right\" AND r.c21 IS MISSING WHERE l.type = \"left\" AND l.c11 > 2",
        "results": [
        {
            "c11": 4,
            "s22": 60
        }
	]
    },
    {
        "testcase": "MB-38968",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY i WITHIN p.plan.`~children` SATISFIES i.`#operator` = 'NestedLoopJoin' AND i.`alias` = 'r' AND i.`outer` = true END"
        },
        "statements":"SELECT l.c11, r.c22 FROM shellTest l LEFT JOIN shellTest r ON l.c11 = r.c21 AND r.c22 <= 0 AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2 AND l.c12 IN (CASE WHEN r.c21 IS VALUED THEN [r.c22] ELSE [30, 40] END)",
        "results": [
        {
            "c11": 3
        },
        {
            "c11": 4
        }
	]
    },
    {
        "testcase": "MB-46607",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` IS NOT MISSING AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`index` = 'st_ix24' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 1 END END"
        },
        "statements":"SELECT l.c11, r.c21 FROM shellTest l LEFT JOIN shellTest r ON l.c11 = r.c21 AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2 AND r IS MISSING",
        "results": [
        {
            "c11": 4
        }
	]
    },
    {
        "testcase": "MB-48601",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'r' AND v.`outer` IS NOT MISSING AND v.`filter` IS MISSING END"
        },
        "statements":"SELECT l.c11, r.c21 FROM shellTest l LEFT JOIN shellTest r ON l.c12 = r.c22 AND l.c11 != r.c21 AND r.type = \"right\" WHERE l.type = \"left\" AND l.c11 > 2",
        "results": [
        {
            "c11": 3
        },
        {
            "c11": 4
        }
	]
    },
    {
        "testcase": "MB-49425",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'HashJoin' AND v.`outer` IS NOT MISSING AND v.`filter` IS MISSING END"
        },
        "statements":"SELECT p AS id, earliest_in_future FROM [{ \"id\": 1 }, { \"id\": 2 }, { \"id\": 3 }, { \"id\": 4 }, { \"id\": 5 }] p LEFT JOIN [{ \"parent\": 1, \"date\": \"2030-01-01\" }, { \"parent\": 1, \"date\": \"2000-01-01\" }, { \"parent\": 2, \"date\": \"2000-01-01\" }, { \"parent\": 3, \"date\": \"2030-01-01\" }, { \"parent\": 3, \"date\": \"2060-01-01\" }] c ON c.parent = p.id AND SUBSTR(c.date, 0, 10) >= SUBSTR(NOW_STR(), 0, 10) GROUP BY p LETTING earliest_in_future = MIN(SUBSTR(c.date, 0, 10)) ORDER BY p.id",
        "ordered": true,
        "results": [
        {
            "earliest_in_future": "2030-01-01",
            "id": {
                "id": 1
            }
        },
        {
            "earliest_in_future": null,
            "id": {
                "id": 2
            }
        },
        {
            "earliest_in_future": "2030-01-01",
            "id": {
                "id": 3
            }
        },
        {
            "earliest_in_future": null,
            "id": {
                "id": 4
            }
        },
        {
            "earliest_in_future": null,
            "id": {
                "id": 5
            }
        }
	]
    },
    {
        "testcase": "MB-50077",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`outer` IS MISSING END"
        },
        "statements":"SELECT product AS product, offer AS offer FROM shellTest AS offer LEFT JOIN shellTest AS product ON offer.field3 = product.field3 WHERE offer.field1 = \"123456\" AND offer.field2 = TRUE AND META(offer).id LIKE \"OFFER:%\" AND META(product).id LIKE \"PRODUCT:%\"",
        "ordered": true,
        "results": [
	]
    },
    {
        "testcase": "MB-51736",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`outer` = true AND v.`filter` IS MISSING END"
        },
        "statements":"SELECT lhs.c11, rhs.c21 FROM shellTest AS lhs LEFT JOIN shellTest AS rhs ON lhs.c11 = rhs.c21 AND rhs.type = \"right\" AND rhs.c22 BETWEEN 30 AND 40 WHERE lhs.type = \"left\" AND lhs.c11 IN [4,5]",
        "ordered": true,
        "results": [
            {
                "c11": 4
            }
	]
    },
    {
        "testcase": "MB-53298, part 1",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'HashJoin' AND v.`outer` = true END"
        },
        "statements":"SELECT x, y FROM [1, 2] AS x LEFT JOIN [1, MISSING] AS y ON x = y",
        "results": [
            {
                "x": 1,
                "y": 1
            },
            {
                "x": 2
            }
	]
    },
    {
        "testcase": "MB-53298, part 2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`outer` = true END"
        },
        "statements":"SELECT x, y FROM [1, 2] AS x LEFT JOIN [1, MISSING] AS y USE HASH(PROBE) ON x = y",
        "results": [
            {
                "x": 1,
                "y": 1
            },
            {
                "x": 2
            }
	]
    },
    {
        "testcase": "MB-53377",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ARRAY_LENGTH(p.`~subqueries`) = 1 AND ANY v WITHIN p.`~subqueries`[0].plan.`~children` SATISFIES v.`#operator` = 'Join' END"
        },
        "statements":"SELECT  (SELECT RAW 1 FROM  x AS l JOIN shellTest AS r ON meta(r).id = \"1\")[0] AS d FROM [1] AS x",
        "results": [
            {}
	]
    },
    {
        "testcase": "MB-53565, part 1: no correlation",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ARRAY_LENGTH(p.`~subqueries`) = 1 AND NOT CONTAINS(p.`~subqueries`[0].subquery, \"correlated \")"
        },
        "statements":"WITH cte1 AS ( SELECT * FROM (SELECT t1.*, t2.* FROM [{\"a\":1}] AS t1 JOIN [{\"b\":1}] AS t2 ON t1.a = t2.b) lhs JOIN shellTest AS c1 USE HASH(build) ON lhs.a = c1.c11 WHERE c1.type = \"left\" ) SELECT count(*) AS cnt FROM cte1",
        "results": [
            {
                "cnt": 1
            }
	]
    },
    {
        "testcase": "MB-53565, part 2: index span with correlation",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY sub IN p.`~subqueries` SATISFIES CONTAINS(sub.subquery, \"correlated \") AND ANY v WITHIN sub.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`spans`[0].`range`[0].low = 'null' END END"
        },
        "statements":"WITH cte1 AS (SELECT t1.a FROM [{\"a\":1}] AS t1), cte2 AS (SELECT t2.b FROM [{\"b\":1}] AS t2), cte3 AS ( SELECT * FROM (SELECT t1.*, t2.* FROM cte1 AS t1 JOIN cte2 AS t2 ON t1.a = t2.b) lhs JOIN shellTest AS c1 USE HASH(build) ON lhs.a = c1.c11 WHERE c1.type = \"left\" ) SELECT count(*) AS cnt FROM cte3",
        "results": [
            {
                "cnt": 1
            }
	]
    },
    {
        "testcase": "MB-53601, part 1",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'final' AND ANY s WITHIN v.`~child`.`~children` SATISFIES s.`#operator` = 'ExpressionScan' AND s.`alias` = 'final' AND s.`uncorrelated` = true END END AND ARRAY_LENGTH(p.`~subqueries`) > 0"
        },
        "statements":"SELECT d1.c21 FROM shellTest d1 JOIN ( SELECT d2.c11 FROM shellTest d2 JOIN ( SELECT d3.c11 FROM shellTest AS d3 WHERE d3.type = \"left\" AND d3.c11 < 3) AS d10 ON d2.c11 = d10.c11 WHERE d2.type = \"left\" AND d2.c11 = 1) AS final USE NL ON d1.c21 = final.c11 WHERE d1.type = \"right\"",
        "results": [
            {
                "c21": 1
            }
	]
    },
    {
        "testcase": "MB-53601, part 2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'd10' AND ANY s WITHIN v.`~child`.`~children` SATISFIES s.`#operator` = 'ExpressionScan' AND s.`alias` = 'd10' AND s.`uncorrelated` = true END END AND ARRAY_LENGTH(p.`~subqueries`) > 0"
        },
        "statements":"SELECT d1.c21 FROM shellTest d1 JOIN ( SELECT d2.c11 FROM shellTest d2 JOIN ( SELECT d3.c11 FROM shellTest AS d3 WHERE d3.type = \"left\" AND d3.c11 < 3) AS d10 USE NL ON d2.c11 = d10.c11 WHERE d2.type = \"left\" AND d2.c11 = 1) AS final USE HASH(build) ON d1.c21 = final.c11 WHERE d1.type = \"right\"",
        "results": [
            {
                "c21": 1
            }
	]
    }
]

