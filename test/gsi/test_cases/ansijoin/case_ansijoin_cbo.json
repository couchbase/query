[
    {
        "testcase": "from case_ansijoin_bugs.json, MB-38564 part4. MB-55560",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true,
                    "cost": true,
                    "cardinality": true
                }
            ],
            "statement": "SELECT true AS present, p.cost IS NOT MISSING AS cost, p.cardinality IS NOT MISSING AS cardinality FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` = 'NestedLoopJoin' AND j.`alias` = 'r' AND j.`outer` = true AND ANY v WITHIN j.`~child` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND array_length(v.`spans`[0].`range`) = 1 END END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c11, r.c22, s.c22 AS s22 FROM shellTest l LEFT JOIN shellTest r ON l.c12 = r.c22 AND r.type = \"right\" JOIN shellTest s ON s.c21 = l.c11 + 2 AND s.type = \"right\" AND r.c21 IS MISSING WHERE l.type = \"left\" AND l.c11 > 2",
        "results": [
        {
            "c11": 4,
            "s22": 60
        }
	]
    },
    {
        "testcase": "from case_ansijoin_bugs.json, MB-53377",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ARRAY_LENGTH(p.`~subqueries`) = 1 AND ANY v WITHIN p.`~subqueries`[0].plan.`~children` SATISFIES v.`#operator` = 'Join' END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT  (SELECT RAW 1 FROM  x AS l JOIN shellTest AS r ON meta(r).id = \"1\")[0] AS d FROM [1] AS x",
        "results": [
            {}
	]
    },
    {
        "testcase": "from case_ansijoin_bugs.json, MB-53601, part 2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true,
                    "cost": true,
                    "cardinality": true,
                    "optimizer_hints": {
                        "hints_followed": [
                            "USE_HASH(`final`/BUILD)"
                        ],
                        "~from_clause_subqueries": [
                            {
                                "alias": "final",
                                "optimizer_hints": {
                                    "hints_followed": [
                                        "USE_NL(`d10`)"
                                    ]
                                }
                            }
                        ]
                    }
                }
            ],
            "statement": "SELECT true AS present, p.cost IS NOT MISSING AS cost, p.cardinality IS NOT MISSING AS cardinality, p.`optimizer_hints` FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'd10' AND ANY s WITHIN v.`~child`.`~children` SATISFIES s.`#operator` = 'ExpressionScan' AND s.`alias` = 'd10' AND s.`uncorrelated` = true END END AND ARRAY_LENGTH(p.`~subqueries`) > 0"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT d1.c21 FROM shellTest d1 JOIN ( SELECT d2.c11 FROM shellTest d2 JOIN ( SELECT d3.c11 FROM shellTest AS d3 WHERE d3.type = \"left\" AND d3.c11 < 3) AS d10 USE NL ON d2.c11 = d10.c11 WHERE d2.type = \"left\" AND d2.c11 = 1) AS final USE HASH(build) ON d1.c21 = final.c11 WHERE d1.type = \"right\"",
        "results": [
            {
                "c21": 1
            }
	]
    },
    {
        "testcase": "MB-55547",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true,
                    "cost": true,
                    "cardinality": true,
                    "optimizer_hints": {
                        "hints_followed": [
                            "INDEX(`l` `#sequentialscan`)"
                        ]
                    }
                }
            ],
            "statement": "SELECT true AS present, p.cost IS NOT MISSING AS cost, p.cardinality IS NOT MISSING AS cardinality, p.`optimizer_hints` FROM $explan AS p WHERE ANY j WITHIN p.plan.`~children` SATISFIES j.`#operator` LIKE 'PrimaryScan%' AND j.`as` = 'l' END AND ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'Order' END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT /*+ INDEX(l `#sequentialscan`) */ l.c11, r.c21, r.c22 FROM shellTest l JOIN shellTest r ON l.c12 = r.c22 AND r.type = \"right\" WHERE l.type = \"left\" ORDER BY r.c21 DESC",
        "ordered": true,
        "results": [
            {
                "c11": 3,
                "c21": 3,
                "c22": 30
            },
            {
                "c11": 2,
                "c21": 2,
                "c22": 20
            },
            {
                "c11": 1,
                "c21": 1,
                "c22": 10
            }
	]
    },
    {
        "testcase": "MB-63024",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY i WITHIN p.`~subqueries` SATISFIES i.`#operator` LIKE 'IndexScan%' AND i.`index` = 'st_ix24' AND i.`index_group_aggs` IS NOT MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c11, l.c12, r.c22, r.cnt FROM shellTest AS l LEFT JOIN ( SELECT s.c22, COUNT(1) AS cnt FROM shellTest AS s WHERE s.c21 IN [2,4] AND s.type = \"right\" GROUP BY s.c22) AS r USE NL ON l.c12 = r.c22 WHERE l.c11 IN [1,2] AND l.type = \"left\"",
        "results": [
            {
                "c11": 1,
                "c12": 10
            },
            {
                "c11": 2,
                "c12": 20,
                "c22": 20,
                "cnt": 1
            }
	]
    },
    {
        "testcase": "MB-63163",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`index` = 'st_ix21' END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c11, r.c21 FROM shellTest l LEFT JOIN shellTest r ON r.type = \"right\" AND l.c11 = r.c21 AND ANY v IN r.a21 SATISFIES v IN [1,2] END WHERE l.type = \"left\" AND l.c11 <= 3",
        "results": [
            {
                "c11": 1,
                "c21": 1
            },
            {
                "c11": 2,
                "c21": 2
            },
            {
                "c11": 2,
                "c21": 2
            },
            {
                "c11": 3
            }
        ]
    },
    {
        "testcase": "MB-63647",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'r' END AND ANY u WITHIN p.`~subqueries` SATISFIES u.`#operator` LIKE 'IndexScan%' AND u.`index_group_aggs`.`partial` = true END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c11, r.c22 FROM shellTest l JOIN (SELECT c22, MAX(c21) AS c21 FROM shellTest WHERE type = \"right\" and c21 > 0 GROUP BY c22) AS r USE NL ON l.c11 = r.c21 AND l.c12 = r.c22 WHERE l.type = \"left\" AND r.c21 > 0",
        "results": [
            {
                "c11": 1,
                "c22": 10
            },
            {
                "c11": 2,
                "c22": 20
            },
            {
                "c11": 3,
                "c22": 30
            }
        ]
    },
    {
        "testcase": "MB-63947, part 1",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'ph' END"
        },
        "queryParams": {"use_cbo": true},
	"ordered": true,
        "statements":"SELECT o.ordersId, p.purchaseId FROM orders o LEFT JOIN (SELECT /*+ ORDERED */ c.customerId, ph.purchaseId FROM (SELECT customerId, firstName, lastName FROM customer WHERE lastName IN [ \"Quitzon\", \"Gibson\" ]) AS c LEFT JOIN purchase ph ON c.customerId = ph.customerId) AS p ON o.customerId = p.customerId WHERE o.customerId IS VALUED ORDER BY o.ordersId, p.purchaseId LIMIT 10",
        "results": [
            {
                "ordersId": "orders1",
                "purchaseId": "purchase2682"
            },
            {
                "ordersId": "orders2",
                "purchaseId": "purchase2682"
            },
            {
                "ordersId": "orders3",
                "purchaseId": "purchase2682"
            },
            {
                "ordersId": "orders4",
                "purchaseId": "purchase2682"
            },
            {
                "ordersId": "orders5",
                "purchaseId": "purchase3545"
            },
            {
                "ordersId": "orders5",
                "purchaseId": "purchase6299"
            },
            {
                "ordersId": "orders6",
                "purchaseId": "purchase3545"
            },
            {
                "ordersId": "orders6",
                "purchaseId": "purchase6299"
            }
        ]
    },
    {
        "testcase": "MB-63947, part 2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.`~subqueries` SATISFIES v.`correlated` = true AND ANY u WITHIN v.plan.`~children` SATISFIES u.`#operator` LIKE 'IndexScan%' AND u.`as` = 'ph' END END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT o.ordersId, (SELECT c.firstName, c.lastName, c.customerId, ph.purchaseId FROM customer AS c LEFT JOIN purchase ph ON c.customerId = ph.customerId WHERE c.customerId = o.customerId) AS p FROM (SELECT ordersId, customerId FROM orders o WHERE o.customerId IS VALUED) AS o ORDER BY o.ordersId LIMIT 10",
        "results": [
            {
                "ordersId": "orders1",
                "p": [
                    {
                        "customerId": "customer736",
                        "firstName": "Rashawn",
                        "lastName": "Quitzon",
                        "purchaseId": "purchase2682"
                    }
                ]
            },
            {
                "ordersId": "orders2",
                "p": [
                    {
                        "customerId": "customer736",
                        "firstName": "Rashawn",
                        "lastName": "Quitzon",
                        "purchaseId": "purchase2682"
                    }
                ]
            },
            {
                "ordersId": "orders3",
                "p": [
                    {
                        "customerId": "customer736",
                        "firstName": "Rashawn",
                        "lastName": "Quitzon",
                        "purchaseId": "purchase2682"
                    }
                ]
            },
            {
                "ordersId": "orders4",
                "p": [
                    {
                        "customerId": "customer736",
                        "firstName": "Rashawn",
                        "lastName": "Quitzon",
                        "purchaseId": "purchase2682"
                    }
                ]
            },
            {
                "ordersId": "orders5",
                "p": [
                    {
                        "customerId": "customer947",
                        "firstName": "Israel",
                        "lastName": "Gibson",
                        "purchaseId": "purchase3545"
                    },
                    {
                        "customerId": "customer947",
                        "firstName": "Israel",
                        "lastName": "Gibson",
                        "purchaseId": "purchase6299"
                    }
                ]
            },
            {
                "ordersId": "orders6",
                "p": [
                    {
                        "customerId": "customer947",
                        "firstName": "Israel",
                        "lastName": "Gibson",
                        "purchaseId": "purchase3545"
                    },
                    {
                        "customerId": "customer947",
                        "firstName": "Israel",
                        "lastName": "Gibson",
                        "purchaseId": "purchase6299"
                    }
                ]
            }
        ]
    },
    {
        "testcase": "MB-64613",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'st3' AND v.`outer` IS MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT st1.c12 AS c112, st2.c22 AS c222, st3.c12 AS c312, st4.c22 AS c422 FROM shellTest AS st1 LEFT JOIN shellTest AS st2 ON st1.c11 = st2.c21 AND st2.type = 'right' LEFT JOIN shellTest AS st3 ON st2.c21 = st3.c11 AND st3.type = 'left' LEFT JOIN shellTest AS st4 ON st3.c11 = st4.c21 AND st4.type = 'right' WHERE st1.type = 'left' AND st2.c22 IN [20, 21] AND st3.c12 > 10",
        "results": [
            {
                "c112": 20,
                "c222": 20,
                "c312": 20,
                "c422": 20
            },
            {
                "c112": 20,
                "c222": 20,
                "c312": 20,
                "c422": 21
            },
            {
                "c112": 20,
                "c222": 21,
                "c312": 20,
                "c422": 20
            },
            {
                "c112": 20,
                "c222": 21,
                "c312": 20,
                "c422": 21
            }
        ]
    },
    {
        "testcase": "MB-64666",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'NestedLoopJoin' AND v.`alias` = 'st3' AND v.`outer` IS MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT st1.c12 AS c112, st2.c22 AS c222, st3.c12 AS c312, st4.c22 AS c422 FROM shellTest AS st1 LEFT JOIN shellTest AS st2 ON st1.c11 = st2.c21 AND st2.type = 'right' LEFT JOIN shellTest AS st3 ON st2.c21 = st3.c11 AND st3.type = 'left' LEFT JOIN shellTest AS st4 ON st3.c11 = st4.c21 AND st4.type = 'right' WHERE st1.type = 'left' AND st2.c22 = 20 AND st3.c12 > 10",
        "results": [
            {
                "c112": 20,
                "c222": 20,
                "c312": 20,
                "c422": 20
            },
            {
                "c112": 20,
                "c222": 20,
                "c312": 20,
                "c422": 21
            }
        ]
    },
    {
        "testcase": "MB-65832",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'd' AND v.`index_group_aggs` IS NOT MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT d1.c11,  META(d1).id, d2.m FROM (SELECT d.c21 , MIN(d.c22) AS m FROM shellTest AS d WHERE d.c21 IS NOT NULL AND d.type = 'right' GROUP BY d.c21) AS d2 JOIN shellTest AS d1 ON d1.c11 = d2.c21 AND d1.c12 = d2.m AND d1.type = 'left'",
        "results": [
            {
                "c11": 1,
                "id": "test11_ansijoin",
                "m": 10
            },
            {
                "c11": 2,
                "id": "test12_ansijoin",
                "m": 20
            },
            {
                "c11": 3,
                "id": "test13_ansijoin",
                "m": 30
            }
        ]
    },
    {
        "testcase": "MB-65976 part 1",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' AND v.`covers` IS NOT MISSING END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c11, l.a11, r.c22 FROM shellTest AS l LEFT JOIN shellTest AS r USE HASH(BUILD) ON r.type = \"right\" AND l.c11 = r.c21 WHERE l.type = \"left\" AND l.c11 > 0 AND r.c21 IS MISSING",
        "results": [
            {
                "c11": 4,
                "a11": [
                    30,
                    30,
                    30
                ]
            }
        ]
    },
    {
        "testcase": "MB-65976 part 2",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` LIKE 'IndexScan%' AND v.`as` = 'r' END"
        },
        "queryParams": {"use_cbo": true},
        "statements":"SELECT l.c12, r.c22 FROM shellTest AS l JOIN shellTest AS r USE HASH(BUILD) ON r.type = \"right\" AND (l.c11 = r.c21 OR l.c12 = r.c21) AND l.test_id = r.test_id WHERE l.type = \"left\" AND l.c11 IN [1,4]",
        "results": [
            {
                "c12": 10,
                "c22": 10
            }
        ]
    }
]
