[
    {
        "testcase": "Query with ORDER BY but no LIMIT, no early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND v.`index_keys` IS MISSING END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND NOT CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer100%\" ORDER BY purchasedAt desc OFFSET 10",
        "ordered": true,
        "results": [
            {
                "purchaseId": "purchase3887",
                "purchasedAt": "2013-05-11T15:52:38Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase1775",
                "purchasedAt": "2013-05-11T15:52:35Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and GROUP BY, no early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND v.`index_keys` IS MISSING END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND NOT CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT count(*) AS cnt, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" AND type IS NOT MISSING GROUP BY purchaseId, purchasedAt ORDER BY purchaseId, purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "cnt": 1,
                "purchaseId": "purchase1102",
                "purchasedAt": "2013-05-11T15:52:34Z"
            },
            {
                "cnt": 1,
                "purchaseId": "purchase1119",
                "purchasedAt": "2013-10-08T15:52:34Z"
            },
            {
                "cnt": 1,
                "purchaseId": "purchase1134",
                "purchasedAt": "2013-07-10T15:52:34Z"
            },
            {
                "cnt": 1,
                "purchaseId": "purchase1135",
                "purchasedAt": "2013-11-07T15:52:34Z"
            },
            {
                "cnt": 1,
                "purchaseId": "purchase1152",
                "purchasedAt": "2014-04-06T15:52:34Z"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and LIMIT, early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "purchaseId": "purchase8253",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8551",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8526",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8402",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8090",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and LIMIT, multiple ORDER BY terms, early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY purchaseId, purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "purchaseId": "purchase1102",
                "purchasedAt": "2013-05-11T15:52:34Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase1119",
                "purchasedAt": "2013-10-08T15:52:34Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase1134",
                "purchasedAt": "2013-07-10T15:52:34Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase1135",
                "purchasedAt": "2013-11-07T15:52:34Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase1152",
                "purchasedAt": "2014-04-06T15:52:34Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and LIMIT, index condition in ORDER BY, early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY purchasedAt desc, test_id OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "purchaseId": "purchase8253",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8551",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8526",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8402",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8090",
                "purchasedAt": "2014-05-06T15:52:43Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and LIMIT, multiple ORDER BY terms, partial order from index, early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 AND ARRAY_LENGTH(v.`index_order`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND o.`partial_sort_term_count` = 1 AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY customerId, purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "purchaseId": "purchase7259",
                "purchasedAt": "2014-03-07T15:52:41Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase5247",
                "purchasedAt": "2014-02-05T15:52:39Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase8646",
                "purchasedAt": "2013-08-09T15:52:43Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase31",
                "purchasedAt": "2013-08-09T15:52:32Z",
                "type": "purchase"
            },
            {
                "purchaseId": "purchase3217",
                "purchasedAt": "2013-07-10T15:52:37Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "Query with ORDER BY and LIMIT, ORDER BY projection alias, early order. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId AS pid FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY pid, purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "pid": "purchase1102",
                "purchasedAt": "2013-05-11T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1119",
                "purchasedAt": "2013-10-08T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1134",
                "purchasedAt": "2013-07-10T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1135",
                "purchasedAt": "2013-11-07T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1152",
                "purchasedAt": "2014-04-06T15:52:34Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "MB-52503. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND v.`filter` IS MISSING END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND NOT CONTAINS(o.`sort_terms`[1].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT p.customerId, p.type, s FROM purchase AS p LET s = (SELECT RAW SUM(l.count) FROM purchase AS p1 USE KEYS meta(p).id UNNEST p1.lineItems AS l)[0] WHERE s > 0 AND test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY s DESC, p.customerId OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "customerId": "customer157",
                "s": 20,
                "type": "purchase"
            },
            {
                "customerId": "customer165",
                "s": 20,
                "type": "purchase"
            },
            {
                "customerId": "customer169",
                "s": 20,
                "type": "purchase"
            },
            {
                "customerId": "customer179",
                "s": 20,
                "type": "purchase"
            },
            {
                "customerId": "customer180",
                "s": 20,
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "MB-52509. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY v WITHIN p.plan.`~children` SATISFIES v.`#operator` = 'IndexScan3' AND ARRAY_LENGTH(v.`index_keys`) > 0 END AND ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "namedArgs": {"offset": 10, "limit": 5},
        "statements":"SELECT type, purchasedAt, purchaseId AS pid FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" ORDER BY pid, purchasedAt desc OFFSET $offset LIMIT $limit",
        "ordered": true,
        "results": [
            {
                "pid": "purchase1102",
                "purchasedAt": "2013-05-11T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1119",
                "purchasedAt": "2013-10-08T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1134",
                "purchasedAt": "2013-07-10T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1135",
                "purchasedAt": "2013-11-07T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1152",
                "purchasedAt": "2014-04-06T15:52:34Z",
                "type": "purchase"
            }
        ]
    },
    {
        "testcase": "MB-54540. Explain",
        "ignore": "index_id",
        "explain": {
            "disabled": false,
            "results": [
                {
                    "present": true
                }
            ],
            "statement": "SELECT true AS present FROM $explan AS p WHERE ANY o WITHIN p.plan.`~children` SATISFIES o.`#operator` = 'Order' AND o.`limit` IS NOT MISSING AND NOT CONTAINS(o.`sort_terms`[0].`expr`, \"_index_key\") END"
        },
        "statements":"SELECT type, purchasedAt, purchaseId AS pid FROM purchase WHERE test_id = \"arrayIndex\" AND customerId like \"customer1%\" AND ARRAY_LENGTH(lineItems) > 1 ORDER BY pid, purchasedAt desc OFFSET 10 LIMIT 5",
        "ordered": true,
        "results": [
            {
                "pid": "purchase1102",
                "purchasedAt": "2013-05-11T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1119",
                "purchasedAt": "2013-10-08T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1152",
                "purchasedAt": "2014-04-06T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1156",
                "purchasedAt": "2013-09-08T15:52:34Z",
                "type": "purchase"
            },
            {
                "pid": "purchase1159",
                "purchasedAt": "2013-09-08T15:52:34Z",
                "type": "purchase"
            }
        ]
    }
]
