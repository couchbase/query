/\"(\\\"|\\[^\"]|[^\"\\])*\"?/ {
    var e error

    lval.s, e = ProcessEscapeSequences(yylex.Text())
    yylex.curOffset += len(yylex.Text())
    if e != nil {
        yylex.reportError("invalid quoted string - "+e.Error())
        return _ERROR_
    }
    return STR
}

/'(\'\'|\\'|\\[^']|[^'\\])*'?/ {
    var e error

    lval.s, e = ProcessEscapeSequences(yylex.Text())
    yylex.curOffset += len(yylex.Text())
    if e != nil {
        yylex.reportError("invalid quoted string - "+e.Error())
        return _ERROR_
    }
    return STR
}

/`((\`\`|\\`)|\\[^`]|[^`\\])*`?i/ {
    // Case-insensitive identifier
    var e error

    text := yylex.Text()
    text = text[0 : len(text)-1]
    lval.s, e = ProcessEscapeSequences(text)
    yylex.curOffset += len(yylex.Text())
    if e != nil {
        yylex.reportError("invalid case insensitive identifier - "+e.Error())
        return _ERROR_
    }
    return IDENT_ICASE
}

/`((\`\`|\\`)|\\[^`]|[^`\\])*`?/ {
    // Escaped identifier
    var e error

    lval.s, e = ProcessEscapeSequences(yylex.Text())
    yylex.curOffset += len(yylex.Text())
    if e != nil {
        yylex.reportError("invalid escaped identifier - "+e.Error())
        return _ERROR_
    }
    return IDENT
}

/(0|[1-9][0-9]*)\.[0-9]+([eE][+\-]?[0-9]+)?/ {
    // We differentiate NUM from INT
    lval.f,_ = strconv.ParseFloat(yylex.Text(), 64)
    yylex.curOffset += len(yylex.Text())
    return NUM
}

/(0|[1-9][0-9]*)[eE][+\-]?[0-9]+/ {
    // We differentiate NUM from INT
    lval.f, _ = strconv.ParseFloat(yylex.Text(), 64)
    yylex.curOffset += len(yylex.Text())
    return NUM
}

/0|[1-9][0-9]*/ {
    // We differentiate NUM from INT
    yylex.curOffset += len(yylex.Text())
    lval.n, _ = strconv.ParseInt(yylex.Text(), 10, 64)
    if (lval.n > math.MinInt64 && lval.n < math.MaxInt64) || strconv.FormatInt(lval.n, 10) == yylex.Text() {
        return INT
    } else {
        lval.f, _ = strconv.ParseFloat(yylex.Text(), 64)
        return NUM
    }
}

/[0-9][0-9]*[a-zA-Z_][0-9a-zA-Z_]*/
{
    yylex.reportError("invalid number")
    return _ERROR_
}

/\/\*\+[^*]?(([^*\/])|(\*+[^\/])|([^*]\/))*\*+\// {
    s := yylex.Text()
    lval.s = s[2:len(s)-2]
    yylex.curOffset += len(s)
    return OPTIM_HINTS
}

/--\+[^\n\r]*/  {
    s := yylex.Text()
    lval.s = s[2:]
    yylex.curOffset += len(s)
    return OPTIM_HINTS
}

/\/\*[^*]?(([^*\/])|(\*+[^\/])|([^*]\/))*\*+\// { /* eat up block comment */
    yylex.curOffset += len(yylex.Text())
    yylex.logToken(yylex.Text(), "BLOCK_COMMENT (length=%d)", len(yylex.Text()))
}

/--[^\n\r]*/      { /* eat up line comment */
    yylex.curOffset += len(yylex.Text());
    yylex.logToken(yylex.Text(), "LINE_COMMENT (length=%d)", len(yylex.Text()))
}

/[ \t\n\r\f]+/    { /* eat up whitespace */
    yylex.curOffset += len(yylex.Text());
}

/\./                           { lval.s = yylex.Text(); yylex.curOffset += 1; return DOT }
/\+/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return PLUS }
/-/                            { lval.s = yylex.Text(); yylex.curOffset += 1; return MINUS }
/\*/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return STAR }
/\//                           { lval.s = yylex.Text(); yylex.curOffset += 1; return DIV }
/%/                            { lval.s = yylex.Text(); yylex.curOffset += 1; return MOD }
/\^/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return POW }
/\=\=/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return DEQ }
/\=/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return EQ }
/\!\=/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return NE }
/\<\>/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return NE }
/\</                           { lval.s = yylex.Text(); yylex.curOffset += 1; return LT }
/\<\=/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return LE }
/\>/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return GT }
/\>\=/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return GE }
/\|\|/                         { lval.s = yylex.Text(); yylex.curOffset += 2; return CONCAT }
/\(/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return LPAREN }
/\)/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return RPAREN }
/\{/                           { lval.s = yylex.Text(); yylex.curOffset++; lval.tokOffset = yylex.curOffset; return LBRACE }
/\}/                           { lval.tokOffset = yylex.curOffset; lval.s = yylex.Text(); yylex.curOffset++; return RBRACE }
/\,/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return COMMA }
/\:/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return COLON }
/\[/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return LBRACKET }
/\]/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return RBRACKET }
/\]i/                          { lval.s = yylex.Text(); yylex.curOffset += 2; return RBRACKET_ICASE }
/;/                            { lval.s = yylex.Text(); yylex.curOffset += 1; return SEMI }
/\!/                           { lval.s = yylex.Text(); yylex.curOffset += 1; return NOT_A_TOKEN }

/[_][iI][nN][dD][eE][xX][_][cC][oO][nN][dD][iI][tT][iI][oO][nN]/ {
    lval.s = yylex.Text();
    yylex.curOffset += 16;
    return _INDEX_CONDITION
}
/[_][iI][nN][dD][eE][xX][_][kK][eE][yY]/ { lval.s = yylex.Text(); yylex.curOffset += 10; return _INDEX_KEY }
/[aA][dD][vV][iI][sS][eE]/ {
    yylex.curOffset += 6
    lval.tokOffset = yylex.curOffset
    return ADVISE
}
/[aA][lL][lL]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return ALL }
/[aA][lL][tT][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return ALTER }
/[aA][nN][aA][lL][yY][zZ][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return ANALYZE }
/[aA][nN][dD]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return AND }
/[aA][nN][yY]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return ANY }
/[aA][rR][rR][aA][yY]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return ARRAY }
/[aA][sS]/ {
    yylex.curOffset += 2
    lval.tokOffset = yylex.curOffset
    return AS
}
/[aA][sS][cC]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return ASC }
/[aA][tT]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return AT }
/[bB][eE][gG][iI][nN]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return BEGIN }
/[bB][eE][tT][wW][eE][eE][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return BETWEEN }
/[bB][iI][nN][aA][rR][yY]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return BINARY }
/[bB][oO][oO][lL][eE][aA][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return BOOLEAN }
/[bB][rR][eE][aA][kK]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return BREAK }
/[bB][uU][cC][kK][eE][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return BUCKET }
/[bB][uU][iI][lL][dD]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return BUILD }
/[bB][yY]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return BY }
/[cC][aA][lL][lL]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return CALL }
/[cC][aA][cC][hH][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return CACHE }
/[cC][aA][sS][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return CASE }
/[cC][aA][sS][tT]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return CAST }
/[cC][lL][uU][sS][tT][eE][rR]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return CLUSTER }
/[cC][oO][lL][lL][aA][tT][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return COLLATE }
/[cC][oO][lL][lL][eE][cC][tT][iI][oO][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 10; return COLLECTION }
/[cC][oO][mM][mM][iI][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return COMMIT }
/[cC][oO][mM][mM][iI][tT][tT][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return COMMITTED }
/[cC][oO][nN][nN][eE][cC][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return CONNECT }
/[cC][oO][nN][tT][iI][nN][uU][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return CONTINUE }
/[cC][oO][rR][rR][eE][lL][aA][tT][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 10; return _CORRELATED }
/[cC][oO][vV][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return _COVER }
/[cC][rR][eE][aA][tT][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return CREATE }
/[cC][uU][rR][rR][eE][nN][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return CURRENT }
/[cC][yY][cC][lL][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return CYCLE }
/[dD][aA][tT][aA][bB][aA][sS][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return DATABASE }
/[dD][aA][tT][aA][sS][eE][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return DATASET }
/[dD][aA][tT][aA][sS][tT][oO][rR][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return DATASTORE }
/[dD][eE][cC][lL][aA][rR][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return DECLARE }
/[dD][eE][cC][rR][eE][mM][eE][nN][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return DECREMENT }
/[dD][eE][fF][aA][uU][lL][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return DEFAULT }
/[dD][eE][lL][eE][tT][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return DELETE }
/[dD][eE][rR][iI][vV][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return DERIVED }
/[dD][eE][sS][cC]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return DESC }
/[dD][eE][sS][cC][rR][iI][bB][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return DESCRIBE }
/[dD][iI][sS][tT][iI][nN][cC][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return DISTINCT }
/[dD][oO]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return DO }
/[dD][rR][oO][pP]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return DROP }
/[eE][aA][cC][hH]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return EACH }
/[eE][lL][eE][mM][eE][nN][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return ELEMENT }
/[eE][lL][sS][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return ELSE }
/[eE][nN][dD]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return END }
/[eE][sS][cC][aA][pP][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return ESCAPE }
/[eE][vV][eE][rR][yY]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return EVERY }
/[eE][xX][cC][eE][pP][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return EXCEPT }
/[eE][xX][cC][lL][uU][dD][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return EXCLUDE }
/[eE][xX][eE][cC][uU][tT][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return EXECUTE }
/[eE][xX][iI][sS][tT][sS]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return EXISTS }
/[eE][xX][pP][lL][aA][iI][nN]/   {
    yylex.curOffset += 7
    lval.tokOffset = yylex.curOffset
    return EXPLAIN
}
/[fF][aA][lL][sS][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return FALSE }
/[fF][eE][tT][cC][hH]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return FETCH }
/[fF][iI][lL][tT][eE][rR]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return FILTER }
/[fF][iI][rR][sS][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return FIRST }
/[fF][lL][aA][tT][tT][eE][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return FLATTEN }
/[fF][lL][aA][tT][tT][eE][nN][_][kK][eE][yY][sS]/ { lval.s = yylex.Text(); yylex.curOffset += 12; return FLATTEN_KEYS }
/[fF][lL][uU][sS][hH]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return FLUSH }
/[fF][oO][lL][lL][oO][wW][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return FOLLOWING }
/[fF][oO][rR]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return FOR }
/[fF][oO][rR][cC][eE]/ {
    yylex.curOffset += 5
    lval.tokOffset = yylex.curOffset
    return FORCE
}
/[fF][rR][oO][mM]/ {
    yylex.curOffset += 4
    lval.tokOffset = yylex.curOffset
    return FROM
}
/[fF][tT][sS]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return FTS }
/[fF][uU][nN][cC][tT][iI][oO][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return FUNCTION }
/[gG][oO][lL][aA][nN][gG]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return GOLANG }
/[gG][rR][aA][nN][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return GRANT }
/[gG][rR][oO][uU][pP]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return GROUP }
/[gG][rR][oO][uU][pP][sS]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return GROUPS }
/[gG][sS][iI]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return GSI }
/[hH][aA][sS][hH]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return HASH }
/[hH][aA][vV][iI][nN][gG]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return HAVING }
/[iI][fF]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return IF }
/[iI][gG][nN][oO][rR][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return IGNORE }
/[iI][lL][iI][kK][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return ILIKE }
/[iI][nN]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return IN }
/[iI][nN][cC][lL][uU][dD][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return INCLUDE }
/[iI][nN][cC][rR][eE][mM][eE][nN][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return INCREMENT }
/[iI][nN][dD][eE][xX]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return INDEX }
/[iI][nN][fF][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return INFER }
/[iI][nN][lL][iI][nN][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return INLINE }
/[iI][nN][nN][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return INNER }
/[iI][nN][sS][eE][rR][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return INSERT }
/[iI][nN][tT][eE][rR][sS][eE][cC][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return INTERSECT }
/[iI][nN][tT][oO]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return INTO }
/[iI][sS]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return IS }
/[iI][sS][oO][lL][aA][tT][iI][oO][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return ISOLATION }
/[jJ][aA][vV][aA][sS][cC][rR][iI][pP][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 10; return JAVASCRIPT }
/[jJ][oO][iI][nN]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return JOIN }
/[kK][eE][yY]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return KEY }
/[kK][eE][yY][sS]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return KEYS }
/[kK][eE][yY][sS][pP][aA][cC][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return KEYSPACE }
/[kK][nN][oO][wW][nN]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return KNOWN }
/[lL][aA][nN][gG][uU][aA][gG][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return LANGUAGE }
/[lL][aA][sS][tT]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return LAST }
/[lL][aA][tT][eE][rR][aA][lL]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return LATERAL }
/[lL][eE][fF][tT]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return LEFT }
/[lL][eE][tT]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return LET }
/[lL][eE][tT][tT][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return LETTING }
/[lL][eE][vV][eE][lL]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return LEVEL }
/[lL][iI][kK][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return LIKE }
/[lL][iI][mM][iI][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return LIMIT }
/[lL][sS][mM]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return LSM }
/[mM][aA][pP]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return MAP }
/[mM][aA][pP][pP][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return MAPPING }
/[mM][aA][tT][cC][hH][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return MATCHED }
/[mM][aA][tT][eE][rR][iI][aA][lL][iI][zZ][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 12; return MATERIALIZED }
/[mM][aA][xX][vV][aA][lL][uU][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return MAXVALUE }
/[mM][eE][rR][gG][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return MERGE }
/[mM][iI][nN][vV][aA][lL][uU][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return MINVALUE }
/[mM][iI][sS][sS][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return MISSING }
/[nN][aA][mM][eE][sS][pP][aA][cC][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return NAMESPACE }
/[nN][eE][sS][tT]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return NEST }
/[nN][eE][xX][tT]/             { lval.s = yylex.Text(); yylex.curOffset += 4;; return NEXT }
/[nN][eE][xX][tT][vV][aA][lL]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return NEXTVAL }
/[nN][lL]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return NL }
/[nN][oO]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return NO }
/[nN][oO][tT]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return NOT }
/[nN][tT][hH][_][vV][aA][lL][uU][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return NTH_VALUE }
/[nN][uU][lL][lL]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return NULL }
/[nN][uU][lL][lL][sS]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return NULLS }
/[nN][uN][mM][bB][eE][rR]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return NUMBER }
/[oO][bB][jJ][eE][cC][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return OBJECT }
/[oO][fF][fF][sS][eE][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return OFFSET }
/[oO][nN]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return ON }
/[oO][pP][tT][iI][oO][nN]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return OPTION }
/[oO][pP][tT][iI][oO][nN][sS]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return OPTIONS }
/[oO][rR]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return OR }
/[oO][rR][dD][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return ORDER }
/[oO][tT][hH][eE][rR][sS]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return OTHERS }
/[oO][uU][tT][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return OUTER }
/[oO][vV][eE][rR]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return OVER }
/[pP][aA][rR][sS][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return PARSE }
/[pP][aA][rR][tT][iI][tT][iI][oO][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return PARTITION }
/[pP][aA][sS][sS][wW][oO][rR][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return PASSWORD }
/[pP][aA][tT][hH]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return PATH }
/[pP][oO][oO][lL]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return POOL }
/[pP][rR][eE][cC][eE][dD][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return PRECEDING }
/[pP][rR][eE][pP][aA][rR][eE]/   {
    yylex.curOffset += 7
    lval.tokOffset = yylex.curOffset
    return PREPARE
}

/[pP][rR][eE][vV]/                 { lval.s = yylex.Text(); yylex.curOffset += 4; return PREV }
/[pP][rR][eE][vV][iI][oO][uU][sS]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return PREV }
/[pP][rR][eE][vV][vV][aA][lL]/     { lval.s = yylex.Text(); yylex.curOffset += 7; return PREVVAL }

/[pP][rR][iI][mM][aA][rR][yY]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return PRIMARY }
/[pP][rR][iI][vV][aA][tT][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return PRIVATE }
/[pP][rR][iI][vV][iI][lL][eE][gG][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return PRIVILEGE }
/[pP][rR][oO][cC][eE][dD][uU][rR][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return PROCEDURE }
/[pP][rR][oO][bB][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return PROBE }
/[pP][uU][bB][lL][iI][cC]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return PUBLIC }
/[rR][aA][nN][gG][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return RANGE }
/[rR][aA][wW]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return RAW }
/[rR][eE][aA][dD]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return READ }
/[rR][eE][aA][lL][mM]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return REALM }
/[rR][eE][cC][uU][rR][sS][iI][vV][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return RECURSIVE }
/[rR][eE][dD][uU][cC][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return REDUCE }
/[rR][eE][nN][aA][mM][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return RENAME }
/[rR][eE][pP][lL][aA][cC][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return REPLACE }
/[rR][eE][sS][pP][eE][cC][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return RESPECT }
/[rR][eE][sS][tT][aA][rR][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return RESTART }
/[rR][eE][sS][tT][rR][iI][cC][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return RESTRICT }
/[rR][eE][tT][uU][rR][nN]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return RETURN }
/[rR][eE][tT][uU][rR][nN][iI][nN][gG]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return RETURNING }
/[rR][eE][vV][oO][kK][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return REVOKE }
/[rR][iI][gG][hH][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return RIGHT }
/[rR][oO][lL][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return ROLE }
/[rR][oO][lL][eE][sS]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return ROLES }
/[rR][oO][lL][lL][bB][aA][cC][kK]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return ROLLBACK }
/[rR][oO][wW]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return ROW }
/[rR][oO][wW][sS]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return ROWS }
/[sS][aA][tT][iI][sS][fF][iI][eE][sS]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return SATISFIES }
/[sS][aA][vV][eE]/ {
    yylex.curOffset += 4
    lval.tokOffset = yylex.curOffset
    return SAVE
}
/[sS][aA][vV][eE][pP][oO][iI][nN][tT]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return SAVEPOINT }
/[sS][cC][hH][eE][mM][aA]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return SCHEMA }
/[sS][cC][oO][pP][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return SCOPE }
/[sS][eE][lL][eE][cC][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return SELECT }
/[sS][eE][lL][fF]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return SELF }
/[sS][eE][qQ][uU][eE][nN][cC][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return SEQUENCE }
/[sS][eE][tT]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return SET }
/[sS][hH][oO][wW]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return SHOW }
/[sS][oO][mM][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return SOME }
/[sS][tT][aA][rR][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return START }
/[sS][tT][aA][tT][iI][sS][tT][iI][cC][sS]/ { lval.s = yylex.Text(); yylex.curOffset += 10; return STATISTICS }
/[sS][tT][rR][iI][nN][gG]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return STRING }
/[sS][yY][sS][tT][eE][mM]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return SYSTEM }
/[tT][hH][eE][nN]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return THEN }
/[tT][iI][eE][sS]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return TIES }
/[tT][oO]/                     { lval.s = yylex.Text(); yylex.curOffset += 2; return TO }
/[tT][rR][aA][nN]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return TRAN }
/[tT][rR][aA][nN][sS][aA][cC][tT][iI][oO][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 11; return TRANSACTION }
/[tT][rR][iI][gG][gG][eE][rR]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return TRIGGER }
/[tT][rR][uU][eE]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return TRUE }
/[tT][rR][uU][nN][cC][aA][tT][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return TRUNCATE }
/[uU][nN][bB][oO][uU][nN][dD][eE][dD]/ { lval.s = yylex.Text(); yylex.curOffset += 9; return UNBOUNDED }
/[uU][nN][dD][eE][rR]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return UNDER }
/[uU][nN][iI][oO][nN]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return UNION }
/[uU][nN][iI][qQ][uU][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return UNIQUE }
/[uU][nN][kK][nN][oO][wW][nN]/ { lval.s = yylex.Text(); yylex.curOffset += 7; return UNKNOWN }
/[uU][nN][nN][eE][sS][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return UNNEST }
/[uU][nN][sS][eE][tT]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return UNSET }
/[uU][pP][dD][aA][tT][eE]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return UPDATE }
/[uU][pP][sS][eE][rR][tT]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return UPSERT }
/[uU][sS][eE]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return USE }
/[uU][sS][eE][rR]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return USER }
/[uU][sS][eE][rR][sS]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return USERS }
/[uU][sS][iI][nN][gG]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return USING }
/[vV][aA][lL][iI][dD][aA][tT][eE]/ { lval.s = yylex.Text(); yylex.curOffset += 8; return VALIDATE }
/[vV][aA][lL][uU][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return VALUE }
/[vV][aA][lL][uU][eE][dD]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return VALUED }
/[vV][aA][lL][uU][eE][sS]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return VALUES }
/[vV][eE][cC][tT][oO][rR]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return VECTOR }
/[vV][iI][aA]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return VIA }
/[vV][iI][eE][wW]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return VIEW }
/[wW][hH][eE][nN]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return WHEN }
/[wW][hH][eE][rR][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return WHERE }
/[wW][hH][iI][lL][eE]/         { lval.s = yylex.Text(); yylex.curOffset += 5; return WHILE }
/[wW][iI][nN][dD][oO][wW]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return WINDOW }
/[wW][iI][tT][hH]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return WITH }
/[wW][iI][tT][hH][iI][nN]/     { lval.s = yylex.Text(); yylex.curOffset += 6; return WITHIN }
/[wW][oO][rR][kK]/             { lval.s = yylex.Text(); yylex.curOffset += 4; return WORK }
/[xX][oO][rR]/                 { lval.s = yylex.Text(); yylex.curOffset += 3; return XOR }

/[a-zA-Z_][a-zA-Z0-9_]*/ {
    lval.s = yylex.Text()
    yylex.curOffset += len(lval.s)
    return IDENT
}

/[$|@][a-zA-Z_][a-zA-Z0-9_]*/ {
    lval.s = yylex.Text()[1:]
    yylex.curOffset += len(yylex.Text())
    return NAMED_PARAM
}

/[$|@][1-9][0-9]*/ {
    lval.n, _ = strconv.ParseInt(yylex.Text()[1:], 10, 64)
    yylex.curOffset += len(yylex.Text())
    return POSITIONAL_PARAM
}

/\?\?/ {
    yylex.curOffset += 2
    return RANDOM_ELEMENT
}

/\?/ {
    lval.n = 0 // Handled by parser
    yylex.curOffset++
    return NEXT_PARAM
}

/ / {
    yylex.curOffset++
}

/\t/ {
    yylex.curOffset++
}

/\n/ {
    yylex.curOffset++
}

/./ {
    /* this we don't know what it is: we'll let
       the parser handle it (and most probably throw a syntax error
    */
    yylex.curOffset += len(yylex.Text())
    yylex.logToken(yylex.Text(), "UNKNOWN token")
    return int([]byte(yylex.Text())[0])
}

//
package n1ql

import "fmt"
import "math"
import "strconv"
import "github.com/couchbase/query/logging"

// curOffset, reporError inserted by build.sh via NEX_END_OF_LEXER_STRUCT tag

func (yylex *Lexer) logToken(text string, format string, v ...interface{}) {
    if logging.LogLevel() == logging.TRACE {
        s := fmt.Sprintf(format, v...)
        logging.Tracef("Token: >>%s<< - %s", text, s)
    }
}

func (yylex *Lexer) ResetOffset() {
    yylex.curOffset = 0
}

func (yylex *Lexer) ReportError(reportError func(what string)) {
    yylex.reportError = reportError
}
